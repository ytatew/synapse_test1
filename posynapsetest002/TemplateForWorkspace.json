{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "ワークスペース名",
			"defaultValue": "posynapsetest002"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "'AzureDataLakeStorage1' の 'accountKey' のセキュリティで保護された文字列"
		},
		"Dynamics1_servicePrincipalCredential": {
			"type": "secureString",
			"metadata": "'Dynamics1' の 'servicePrincipalCredential' のセキュリティで保護された文字列"
		},
		"d365-po-poc-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "'d365-po-poc-WorkspaceDefaultSqlServer' の 'connectionString' のセキュリティで保護された文字列"
		},
		"d365_po_poc_servicePrincipalCredential": {
			"type": "secureString",
			"metadata": "'d365_po_poc' の 'servicePrincipalCredential' のセキュリティで保護された文字列"
		},
		"posynapsetest002-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "'posynapsetest002-WorkspaceDefaultSqlServer' の 'connectionString' のセキュリティで保護された文字列"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://pocproecttest.dfs.core.windows.net/"
		},
		"Dynamics1_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "503ce4ca-9f26-4bff-a296-4f774b539aab"
		},
		"d365-po-poc-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://d365popocstrorage.dfs.core.windows.net"
		},
		"d365_po_poc_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "503ce4ca-9f26-4bff-a296-4f774b539aab"
		},
		"posynapsetest002-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://posynapsetest002str.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/POC_Project_Document')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "POC_Project_Document",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"POCDocument1": {},
									"POCDocument2": {},
									"POCDocument3": {},
									"DocumentType": {},
									"TaskDocument": {},
									"Document": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/POC_Project_Document')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/POC_Project_Info')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "POC_Project_Info",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"POCProjectInfo": {},
									"Project": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/POC_Project_Info')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/POC_Project_Output_List')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "POC_Output_List",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"task": {},
									"TaskResource": {},
									"Resource": {},
									"projectActivityTask": {},
									"ProjectActivity": {},
									"ProjectPhaseActivity": {},
									"ProjectPahse": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/POC_Output_List')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/POC_Project_Resource')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "POC_Project_Resource",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"POCResource1": {},
									"POCResource2": {},
									"POCResource3": {},
									"POCResource4": {},
									"TaskResource": {},
									"Employee": {},
									"Resource": {},
									"ResourceType": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/POC_Project_Resource')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/POC_Project_data_Layer')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "JSONtoLakeDB",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "POC_Project_data_Layer",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ProjectData": {},
									"Project": {},
									"ProjectPhase": {},
									"ProjectActivity": {},
									"ProjectActivityTask": {},
									"Task": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-11-04T06:00:49Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/POC_Project_data_Layer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/POC_Project_data_flat')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "POC_Project_data_flat",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"source3": {},
									"ProjectPhase": {},
									"ProjectActivity": {},
									"Task": {},
									"ProjectActivityTask": {},
									"ProjectPhseActivity": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/POC_Project_data_flat')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/d365potaskupdate')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Updated365task",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ProjectTask": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/Updated365task')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/d365potask')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "d365-po-poc-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "D365_PO_Task.csv",
						"folderPath": "source",
						"fileSystem": "d365popocfile"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/d365-po-poc-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/poc_document')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "posynapsetest002-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ドキュメント情報_新規作成20221117.json",
						"folderPath": "source",
						"fileSystem": "posynapsetest002fs"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/posynapsetest002-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/poc_project_Info')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "posynapsetest002-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "研番申請書-抽出20221117.json",
						"folderPath": "source",
						"fileSystem": "posynapsetest002fs"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/posynapsetest002-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/poc_project_flat')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "posynapsetest002-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "研究開発活動フォローシート正規化20221117-flat.json",
						"folderPath": "source",
						"fileSystem": "posynapsetest002fs"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/posynapsetest002-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/poc_project_layer')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "posynapsetest002-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "研究開発活動フォローシート正規化20221117_layer.json",
						"folderPath": "source",
						"fileSystem": "posynapsetest002fs"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/posynapsetest002-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/poc_resource')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "posynapsetest002-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "リソース情報_正規化20221117.json",
						"folderPath": "source",
						"fileSystem": "posynapsetest002fs"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/posynapsetest002-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/projectlist')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "posynapsetest002-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "output",
						"fileSystem": "posynapsetest002fs"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/posynapsetest002-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dynamics1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "Dynamics",
				"typeProperties": {
					"deploymentType": "Online",
					"serviceUri": "https://org091ac1ba.crm.dynamics.com",
					"authenticationType": "AADServicePrincipal",
					"servicePrincipalCredentialType": "ServicePrincipalKey",
					"servicePrincipalId": "[parameters('Dynamics1_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalCredential": {
						"type": "SecureString",
						"value": "[parameters('Dynamics1_servicePrincipalCredential')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/d365-po-poc-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('d365-po-poc-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/d365-po-poc-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('d365-po-poc-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/d365_po_poc')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "Dynamics",
				"typeProperties": {
					"deploymentType": "Online",
					"serviceUri": "https://org091ac1ba.crm.dynamics.com",
					"authenticationType": "AADServicePrincipal",
					"servicePrincipalCredentialType": "ServicePrincipalKey",
					"servicePrincipalId": "[parameters('d365_po_poc_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalCredential": {
						"type": "SecureString",
						"value": "[parameters('d365_po_poc_servicePrincipalCredential')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/posynapsetest002-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('posynapsetest002-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/posynapsetest002-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('posynapsetest002-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/POC_Output_List')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "task"
						},
						{
							"name": "TaskResource"
						},
						{
							"name": "Resource"
						},
						{
							"name": "projectActivityTask"
						},
						{
							"name": "ProjectActivity"
						},
						{
							"name": "ProjectPhaseActivity"
						},
						{
							"name": "ProjectPahse"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "projectlist",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "join2"
						},
						{
							"name": "join3"
						},
						{
							"name": "join4"
						},
						{
							"name": "join5"
						},
						{
							"name": "join6"
						}
					],
					"scriptLines": [
						"source(output(",
						"          TaskId as integer,",
						"          TaskName as string,",
						"          TaskDescription as string,",
						"          TaskSpecificationStatement as string,",
						"          SequenceNumber as integer,",
						"          MilestoneIndicator as boolean,",
						"          CriticalPathTaskIndicator as boolean,",
						"          TaskNote as string,",
						"          TaskPlannedStartTimestamp as timestamp,",
						"          TaskScheduledStartTimestamp as timestamp,",
						"          TaskActualStartTimestamp as timestamp,",
						"          TaskPlannedCompletionTimestamp as timestamp,",
						"          TaskScheduledCompletionTimestamp as timestamp,",
						"          TaskActualCompletionTimestamp as timestamp,",
						"          TaskEarliestStartTimestamp as timestamp,",
						"          TaskLatestStartTimestamp as timestamp,",
						"          TaskEarliestCompletionTimestamp as timestamp,",
						"          TaskLatestCompletionTimestamp as timestamp,",
						"          TaskFloatHours as integer,",
						"          PlannedBillableLaborUnits as integer,",
						"          ActualBillableLaborUnits as integer,",
						"          PlannedBillableChargesAmount as decimal(18,2),",
						"          ActualBillableChargesAmount as decimal(18,2),",
						"          PlannedCostsAmount as decimal(18,2),",
						"          ActualCostsAmount as decimal(18,2),",
						"          TaskTypeId as integer,",
						"          LocationId as integer,",
						"          ResponsibilityCenterId as integer,",
						"          TaskGlAccountNumber as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'Task') ~> task",
						"source(output(",
						"          TaskId as integer,",
						"          ResourceId as integer,",
						"          ResourceNumber as integer,",
						"          ResourceAmount as decimal(18,2),",
						"          ResourceQuantity as decimal(18,2)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'TaskResource') ~> TaskResource",
						"source(output(",
						"          ResourceId as integer,",
						"          ResourceName as string,",
						"          ResourceDescription as string,",
						"          StandardRateAmount as decimal(18,2),",
						"          OvertimeRateAmount as decimal(18,2),",
						"          PlanningStandardRateAmount as decimal(18,2),",
						"          PlanningOvertimeRateAmount as decimal(18,2),",
						"          ResourceTypeId as integer,",
						"          EmployeeId as integer,",
						"          PartyId as long,",
						"          ItemSku as string,",
						"          AssetId as long",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'Resource') ~> Resource",
						"source(output(",
						"          ProjectId as integer,",
						"          ActivityId as integer,",
						"          TaskId as integer,",
						"          ActivityTaskSequenceNumber as integer,",
						"          ActivityTaskNote as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'ProjectActivityTask') ~> projectActivityTask",
						"source(output(",
						"          ProjectId as integer,",
						"          ActivityId as integer,",
						"          ActivityName as string,",
						"          ActivityDescription as string,",
						"          ActivityPlannedStartTimestamp as timestamp,",
						"          ActivityActualStartTimestamp as timestamp,",
						"          ActivityPlannedEndTimestamp as timestamp,",
						"          ActivityActualEndTimestamp as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'ProjectActivity') ~> ProjectActivity",
						"source(output(",
						"          ProjectId as integer,",
						"          ProjectPhaseId as integer,",
						"          ActivityId as integer,",
						"          ProjectPhaseActivityNote as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'ProjectPhaseActivity') ~> ProjectPhaseActivity",
						"source(output(",
						"          ProjectId as integer,",
						"          ProjectPhaseId as integer,",
						"          ProjectPhaseTypeId as integer,",
						"          ProjectPhaseName as string,",
						"          ProjectPhaseDescription as string,",
						"          ProjectPhasePlannedStartDate as date,",
						"          ProjectPhasePlannedFinishDate as date,",
						"          ProjectPhaseActualStartDate as date,",
						"          ProjectPhaseActualFinishDate as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'ProjectPhase') ~> ProjectPahse",
						"task, TaskResource join(task@TaskId == TaskResource@TaskId,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1, Resource join(TaskResource@ResourceId == Resource@ResourceId,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join2",
						"join2, projectActivityTask join(task@TaskId == projectActivityTask@TaskId,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join3",
						"join3, ProjectActivity join(projectActivityTask@ActivityId == ProjectActivity@ActivityId,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join4",
						"join4, ProjectPhaseActivity join(ProjectActivity@ActivityId == ProjectPhaseActivity@ActivityId,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join5",
						"join5, ProjectPahse join(ProjectPhaseActivity@ProjectPhaseId == ProjectPahse@ProjectPhaseId,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join6",
						"join6 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['projectlist.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 0,",
						"     mapColumn(",
						"          ProjectId = ProjectPahse@ProjectId,",
						"          ProjectPhaseName,",
						"          ActivityName,",
						"          TaskName,",
						"          ResourceName",
						"     ),",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/projectlist')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/POC_Output_List_old')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "task"
						},
						{
							"name": "projectactivitytask"
						},
						{
							"name": "projectactivity"
						},
						{
							"name": "projectphaseactivity"
						},
						{
							"name": "projectphase"
						}
					],
					"sinks": [
						{
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "projectlist",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "join2"
						},
						{
							"name": "join3"
						},
						{
							"name": "join4"
						}
					],
					"scriptLines": [
						"source(output(",
						"          TaskId as integer,",
						"          TaskName as string,",
						"          TaskDescription as string,",
						"          TaskSpecificationStatement as string,",
						"          SequenceNumber as integer,",
						"          MilestoneIndicator as boolean,",
						"          CriticalPathTaskIndicator as boolean,",
						"          TaskNote as string,",
						"          TaskPlannedStartTimestamp as timestamp,",
						"          TaskScheduledStartTimestamp as timestamp,",
						"          TaskActualStartTimestamp as timestamp,",
						"          TaskPlannedCompletionTimestamp as timestamp,",
						"          TaskScheduledCompletionTimestamp as timestamp,",
						"          TaskActualCompletionTimestamp as timestamp,",
						"          TaskEarliestStartTimestamp as timestamp,",
						"          TaskLatestStartTimestamp as timestamp,",
						"          TaskEarliestCompletionTimestamp as timestamp,",
						"          TaskLatestCompletionTimestamp as timestamp,",
						"          TaskFloatHours as integer,",
						"          PlannedBillableLaborUnits as integer,",
						"          ActualBillableLaborUnits as integer,",
						"          PlannedBillableChargesAmount as decimal(18,2),",
						"          ActualBillableChargesAmount as decimal(18,2),",
						"          PlannedCostsAmount as decimal(18,2),",
						"          ActualCostsAmount as decimal(18,2),",
						"          TaskTypeId as integer,",
						"          LocationId as integer,",
						"          ResponsibilityCenterId as integer,",
						"          TaskGlAccountNumber as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'Task') ~> task",
						"source(output(",
						"          ProjectId as integer,",
						"          ActivityId as integer,",
						"          TaskId as integer,",
						"          ActivityTaskSequenceNumber as integer,",
						"          ActivityTaskNote as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'ProjectActivityTask') ~> projectactivitytask",
						"source(output(",
						"          ProjectId as integer,",
						"          ActivityId as integer,",
						"          ActivityName as string,",
						"          ActivityDescription as string,",
						"          ActivityPlannedStartTimestamp as timestamp,",
						"          ActivityActualStartTimestamp as timestamp,",
						"          ActivityPlannedEndTimestamp as timestamp,",
						"          ActivityActualEndTimestamp as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'ProjectActivity') ~> projectactivity",
						"source(output(",
						"          ProjectId as integer,",
						"          ProjectPhaseId as integer,",
						"          ActivityId as integer,",
						"          ProjectPhaseActivityNote as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'ProjectPhaseActivity') ~> projectphaseactivity",
						"source(output(",
						"          ProjectId as integer,",
						"          ProjectPhaseId as integer,",
						"          ProjectPhaseTypeId as integer,",
						"          ProjectPhaseName as string,",
						"          ProjectPhaseDescription as string,",
						"          ProjectPhasePlannedStartDate as date,",
						"          ProjectPhasePlannedFinishDate as date,",
						"          ProjectPhaseActualStartDate as date,",
						"          ProjectPhaseActualFinishDate as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'ProjectPhase') ~> projectphase",
						"task, projectactivitytask join(task@TaskId == projectactivitytask@TaskId,",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1, projectactivity join(projectactivitytask@ActivityId == projectactivity@ActivityId,",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join2",
						"join2, projectphaseactivity join(projectactivitytask@ActivityId == projectphaseactivity@ActivityId,",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join3",
						"join3, projectphase join(projectphaseactivity@ProjectPhaseId == projectphase@ProjectPhaseId,",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join4",
						"join4 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          ProjectId = projectactivitytask@ProjectId,",
						"          ProjectPhaseName,",
						"          ActivityName,",
						"          TaskName,",
						"          TaskPlannedStartTimestamp,",
						"          TaskPlannedCompletionTimestamp",
						"     ),",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1",
						"join4 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['projectlist.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          ProjectId = projectactivity@ProjectId,",
						"          ProjectPhaseName,",
						"          ActivityName,",
						"          TaskName,",
						"          TaskPlannedStartTimestamp,",
						"          TaskPlannedCompletionTimestamp",
						"     ),",
						"     partitionBy('hash', 1)) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/projectlist')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/POC_Project_Document')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "poc_document",
								"type": "DatasetReference"
							},
							"name": "POCDocument1"
						},
						{
							"dataset": {
								"referenceName": "poc_document",
								"type": "DatasetReference"
							},
							"name": "POCDocument2"
						},
						{
							"dataset": {
								"referenceName": "poc_document",
								"type": "DatasetReference"
							},
							"name": "POCDocument3"
						}
					],
					"sinks": [
						{
							"name": "DocumentType"
						},
						{
							"name": "TaskDocument"
						},
						{
							"name": "Document"
						}
					],
					"transformations": [
						{
							"name": "flatDocumentType"
						},
						{
							"name": "flatTaskDocuement"
						},
						{
							"name": "flatDocument"
						},
						{
							"name": "adctotimestamp"
						}
					],
					"scriptLines": [
						"source(output(",
						"          DocumenteType as (documenttypeid as short, documenttypename as string)[],",
						"          Taskdocument as (documentid as short, taskid as short)[],",
						"          document as (documentcreatedtimestamp as string, documentid as short, documentname as string, documenttypeid as short)[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'singleDocument') ~> POCDocument1",
						"source(output(",
						"          DocumenteType as (documenttypeid as short, documenttypename as string)[],",
						"          Taskdocument as (documentid as short, taskid as short)[],",
						"          document as (documentcreatedtimestamp as string, documentid as short, documentname as string, documenttypeid as short)[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'singleDocument') ~> POCDocument2",
						"source(output(",
						"          DocumenteType as (documenttypeid as short, documenttypename as string)[],",
						"          Taskdocument as (documentid as short, taskid as short)[],",
						"          document as (documentcreatedtimestamp as string, documentid as short, documentname as string, documenttypeid as short)[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'singleDocument') ~> POCDocument3",
						"POCDocument1 foldDown(unroll(DocumenteType),",
						"     mapColumn(",
						"          documenttypeid = DocumenteType.documenttypeid,",
						"          documenttypename = DocumenteType.documenttypename",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatDocumentType",
						"POCDocument2 foldDown(unroll(Taskdocument),",
						"     mapColumn(",
						"          documentid = Taskdocument.documentid,",
						"          taskid = Taskdocument.taskid",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatTaskDocuement",
						"POCDocument3 foldDown(unroll(document),",
						"     mapColumn(",
						"          DocumentCreatedTimestamp = document.documentcreatedtimestamp,",
						"          DocumentId = document.documentid,",
						"          DocumentName = document.documentname,",
						"          DocumentTypeId = document.documenttypeid",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatDocument",
						"flatDocument cast(output(",
						"          DocumentCreatedTimestamp as timestamp 'yyyy-MM-dd\\'T\\'HH:mm:ss'",
						"     ),",
						"     errors: true) ~> adctotimestamp",
						"flatDocumentType sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'DocumentType',",
						"     input(",
						"          DocumentTypeId as integer,",
						"          DocumentTypeName as string,",
						"          DocumentTypeDescription as string,",
						"          GlobalDocumentTypeIdentifier as string,",
						"          DocumentTypeRetentionPeriod as decimal(3,0),",
						"          DocumentTypeRetentionPeriodUomId as integer,",
						"          DocumentTypeRetentionPeriodNote as string",
						"     ),",
						"     mapColumn(",
						"          DocumentTypeId = documenttypeid,",
						"          DocumentTypeName = documenttypename",
						"     )) ~> DocumentType",
						"flatTaskDocuement sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'TaskDocument',",
						"     input(",
						"          TaskId as integer,",
						"          DocumentId as long,",
						"          TaskDocumentNote as string",
						"     ),",
						"     mapColumn(",
						"          TaskId = taskid,",
						"          DocumentId = documentid",
						"     )) ~> TaskDocument",
						"adctotimestamp sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'Document',",
						"     input(",
						"          DocumentId as long,",
						"          DocumentName as string,",
						"          DocumentDescription as string,",
						"          GlobalDocumentTypeIdentifier as string,",
						"          DocumentScopeStatement as string,",
						"          DocumentRevisionNumber as integer,",
						"          DocumentCreatedTimestamp as timestamp,",
						"          DocumentCompletedTimestamp as timestamp,",
						"          DocumentFiledTimestamp as timestamp,",
						"          DocumentFirstPublishedTimestamp as timestamp,",
						"          DocumentMinimumRetentionTimestamp as timestamp,",
						"          DocumentCopyrightTimestamp as timestamp,",
						"          DocumentDeletedTimestamp as timestamp,",
						"          DocumentImage as binary,",
						"          DocumentText as string,",
						"          DocumentNote as string,",
						"          NumberOfPages as integer,",
						"          PageSize as string,",
						"          DocumentUrl as string,",
						"          IsoLanguageId as integer,",
						"          DeliveryMethodId as integer,",
						"          DocumentFormatTypeId as integer,",
						"          DocumentTypeId as integer,",
						"          MediaTypeId as integer,",
						"          CountryId as integer,",
						"          StateId as integer,",
						"          IdentificationId as integer",
						"     )) ~> Document"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/poc_document')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/POC_Project_Info')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "poc_project_Info",
								"type": "DatasetReference"
							},
							"name": "POCProjectInfo"
						}
					],
					"sinks": [
						{
							"name": "Project"
						}
					],
					"transformations": [
						{
							"name": "flatProjectInfo"
						},
						{
							"name": "casttimestamp"
						}
					],
					"scriptLines": [
						"source(output(",
						"          FiscalYear as short,",
						"          FutanSyubetsu as string,",
						"          KenkyuDaimokuEtc as (End as string, FutanMoto as string, KenkyuKaihatsuDaimoku as string, KenkyuKaihatsuNo as string, ShinseiBumon as string, Start as string)[],",
						"          SeiriNo as boolean,",
						"          SinkiOrKeizoku as string,",
						"          Syosyobumon as string,",
						"          Title as string,",
						"          projectid as integer",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'singleDocument') ~> POCProjectInfo",
						"POCProjectInfo foldDown(unroll(KenkyuDaimokuEtc),",
						"     mapColumn(",
						"          ProjectId = projectid,",
						"          ProjectName = KenkyuDaimokuEtc.KenkyuKaihatsuDaimoku,",
						"          ProjectPlannedStartTimestamp = KenkyuDaimokuEtc.Start,",
						"          ProjectPlannedEndTimestamp = KenkyuDaimokuEtc.End",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatProjectInfo",
						"flatProjectInfo cast(output(",
						"          ProjectPlannedStartTimestamp as timestamp 'yyyy-MM-dd\\'T\\'HH:mm:ss',",
						"          ProjectPlannedEndTimestamp as timestamp 'yyyy-MM-dd\\'T\\'HH:mm:ss'",
						"     ),",
						"     errors: true) ~> casttimestamp",
						"casttimestamp sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'Project',",
						"     input(",
						"          ProjectId as integer,",
						"          ProjectName as string,",
						"          ProjectDescription as string,",
						"          ProjectTypeId as integer,",
						"          ProjectPlannedStartTimestamp as timestamp,",
						"          ProjectPlannedEndTimestamp as timestamp,",
						"          ProjectEarliestStartTimestamp as timestamp,",
						"          ProjectEarliestEndTimestamp as timestamp,",
						"          ProjectLatestStartTimestamp as timestamp,",
						"          ProjectLatestEndTimestamp as timestamp,",
						"          ProjectClosingTimestamp as timestamp,",
						"          ProjectRiskAssessmentStatement as string,",
						"          ProjectWorkStatement as string,",
						"          ProjectCharterStatement as string,",
						"          BusinessCaseStatement as string,",
						"          LocationId as integer,",
						"          ProjectGlAccountNumber as string,",
						"          ResponsibilityCenterId as integer,",
						"          ProjectNote as string",
						"     )) ~> Project"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/poc_project_Info')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/POC_Project_Resource')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "poc_resource",
								"type": "DatasetReference"
							},
							"name": "POCResource1"
						},
						{
							"dataset": {
								"referenceName": "poc_resource",
								"type": "DatasetReference"
							},
							"name": "POCResource2"
						},
						{
							"dataset": {
								"referenceName": "poc_resource",
								"type": "DatasetReference"
							},
							"name": "POCResource3"
						},
						{
							"dataset": {
								"referenceName": "poc_resource",
								"type": "DatasetReference"
							},
							"name": "POCResource4"
						}
					],
					"sinks": [
						{
							"name": "TaskResource"
						},
						{
							"name": "Employee"
						},
						{
							"name": "Resource"
						},
						{
							"name": "ResourceType"
						}
					],
					"transformations": [
						{
							"name": "flatTaskResource"
						},
						{
							"name": "flatEmployee"
						},
						{
							"name": "flatResource"
						},
						{
							"name": "flatResourceType"
						}
					],
					"scriptLines": [
						"source(output(",
						"          emloyeeid as (emloyeeid as short, emloyeename as string)[],",
						"          resource as (employeeid as short, resourceid as short, resourcename as string, resourcetypeid as short)[],",
						"          resourcetype as (resourcetypeid as short, resourcetypename as string)[],",
						"          taskresource as (resourceid as short, taskid as short)[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'singleDocument') ~> POCResource1",
						"source(output(",
						"          emloyeeid as (emloyeeid as short, emloyeename as string)[],",
						"          resource as (employeeid as short, resourceid as short, resourcename as string, resourcetypeid as short)[],",
						"          resourcetype as (resourcetypeid as short, resourcetypename as string)[],",
						"          taskresource as (resourceid as short, taskid as short)[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'singleDocument') ~> POCResource2",
						"source(output(",
						"          emloyeeid as (emloyeeid as short, emloyeename as string)[],",
						"          resource as (employeeid as short, resourceid as short, resourcename as string, resourcetypeid as short)[],",
						"          resourcetype as (resourcetypeid as short, resourcetypename as string)[],",
						"          taskresource as (resourceid as short, taskid as short)[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'singleDocument') ~> POCResource3",
						"source(output(",
						"          emloyeeid as (emloyeeid as short, emloyeename as string)[],",
						"          resource as (employeeid as short, resourceid as short, resourcename as string, resourcetypeid as short)[],",
						"          resourcetype as (resourcetypeid as short, resourcetypename as string)[],",
						"          taskresource as (resourceid as short, taskid as short)[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'singleDocument') ~> POCResource4",
						"POCResource1 foldDown(unroll(taskresource),",
						"     mapColumn(",
						"          resourceid = taskresource.resourceid,",
						"          taskid = taskresource.taskid",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatTaskResource",
						"POCResource2 foldDown(unroll(emloyeeid),",
						"     mapColumn(",
						"          emloyeeid = emloyeeid.emloyeeid,",
						"          emloyeename = emloyeeid.emloyeename",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatEmployee",
						"POCResource3 foldDown(unroll(resource),",
						"     mapColumn(",
						"          employeeid = resource.employeeid,",
						"          resourceid = resource.resourceid,",
						"          resourcename = resource.resourcename,",
						"          resourcetypeid = resource.resourcetypeid",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatResource",
						"POCResource4 foldDown(unroll(resourcetype),",
						"     mapColumn(",
						"          resourcetypeid = resourcetype.resourcetypeid,",
						"          resourcetypename = resourcetype.resourcetypename",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatResourceType",
						"flatTaskResource sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'TaskResource',",
						"     input(",
						"          TaskId as integer,",
						"          ResourceId as integer,",
						"          ResourceNumber as integer,",
						"          ResourceAmount as decimal(18,2),",
						"          ResourceQuantity as decimal(18,2)",
						"     ),",
						"     mapColumn(",
						"          TaskId = taskid,",
						"          ResourceId = resourceid",
						"     )) ~> TaskResource",
						"flatEmployee sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'Employee',",
						"     input(",
						"          EmployeeId as integer,",
						"          EmployeeName as string,",
						"          DateOfBirth as date,",
						"          DateOfDeath as date,",
						"          EmployeeStandardCostAmount as decimal(18,2),",
						"          EmployeeOvertimeCostAmount as decimal(18,2),",
						"          EmployeeHireDate as date,",
						"          HighlyCompensatedEmployeeIndicator as boolean,",
						"          KeyEmployeeIndicator as boolean,",
						"          ExemptEmployeeIndicator as boolean,",
						"          NonexemptEmployeeIndicator as boolean,",
						"          AlienStatusId as integer,",
						"          SexId as integer,",
						"          GenderId as integer,",
						"          RacialCategoryId as integer,",
						"          EthnicCategoryId as integer,",
						"          EmploymentLeadSourceId as integer,",
						"          SecurityClearanceId as integer,",
						"          SecurityLevelId as integer,",
						"          PartyId as long",
						"     ),",
						"     mapColumn(",
						"          EmployeeId = emloyeeid,",
						"          EmployeeName = emloyeename",
						"     )) ~> Employee",
						"flatResource sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'Resource',",
						"     input(",
						"          ResourceId as integer,",
						"          ResourceName as string,",
						"          ResourceDescription as string,",
						"          StandardRateAmount as decimal(18,2),",
						"          OvertimeRateAmount as decimal(18,2),",
						"          PlanningStandardRateAmount as decimal(18,2),",
						"          PlanningOvertimeRateAmount as decimal(18,2),",
						"          ResourceTypeId as integer,",
						"          EmployeeId as integer,",
						"          PartyId as long,",
						"          ItemSku as string,",
						"          AssetId as long",
						"     ),",
						"     mapColumn(",
						"          ResourceId = resourceid,",
						"          ResourceName = resourcename",
						"     )) ~> Resource",
						"flatResourceType sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'ResourceType',",
						"     input(",
						"          ResourceTypeId as integer,",
						"          ResourceTypeName as string,",
						"          ResourceTypeDescription as string",
						"     ),",
						"     mapColumn(",
						"          ResourceTypeId = resourcetypeid,",
						"          ResourceTypeName = resourcetypename",
						"     )) ~> ResourceType"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/poc_resource')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/POC_Project_data_Layer')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "poc_project_layer",
								"type": "DatasetReference"
							},
							"name": "ProjectData"
						}
					],
					"sinks": [
						{
							"name": "Project"
						},
						{
							"name": "ProjectPhase"
						},
						{
							"name": "ProjectActivity"
						},
						{
							"name": "ProjectActivityTask"
						},
						{
							"name": "Task"
						}
					],
					"transformations": [
						{
							"name": "komoku"
						},
						{
							"name": "shokomoku"
						},
						{
							"name": "jishijiko"
						},
						{
							"name": "ToTimestamp"
						}
					],
					"scriptLines": [
						"source(output(",
						"          follow_id as string,",
						"          komoku as (comment as string, jisshikomoku as string, komoku_id as short, mokuhyochi as string)[],",
						"          project_id as integer,",
						"          shokomoku as (comment as string, komoku_id as short, naiyo as string, shokomoku_id as short, tanto_bumon as string)[],",
						"          shosai_jishijiko as (End as string, jishijiko_id as short, jisshikomoku as string, shokomoku_id as short, start as string)[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'singleDocument') ~> ProjectData",
						"ProjectData foldDown(unroll(komoku),",
						"     mapColumn(",
						"          jisshikomoku = komoku.jisshikomoku,",
						"          komoku_id = komoku.komoku_id,",
						"          mokuhyochi = komoku.mokuhyochi,",
						"          project_id",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> komoku",
						"ProjectData foldDown(unroll(shokomoku),",
						"     mapColumn(",
						"          komoku_id = shokomoku.komoku_id,",
						"          naiyo = shokomoku.naiyo,",
						"          shokomoku_id = shokomoku.shokomoku_id,",
						"          project_id",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> shokomoku",
						"ProjectData foldDown(unroll(shosai_jishijiko),",
						"     mapColumn(",
						"          End = shosai_jishijiko.End,",
						"          jishijiko_id = shosai_jishijiko.jishijiko_id,",
						"          jisshikomoku = shosai_jishijiko.jisshikomoku,",
						"          shokomoku_id = shosai_jishijiko.shokomoku_id,",
						"          start = shosai_jishijiko.start,",
						"          project_id",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> jishijiko",
						"jishijiko cast(output(",
						"          End as timestamp 'yyyy-MM-dd\\'T\\'HH:mm:ss',",
						"          jishijiko_id as integer,",
						"          jisshikomoku as string,",
						"          start as timestamp 'yyyy-MM-dd\\'T\\'HH:mm:ss'",
						"     ),",
						"     errors: true) ~> ToTimestamp",
						"ProjectData sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'Project',",
						"     input(",
						"          ProjectId as integer,",
						"          ProjectName as string,",
						"          ProjectDescription as string,",
						"          ProjectTypeId as integer,",
						"          ProjectPlannedStartTimestamp as timestamp,",
						"          ProjectPlannedEndTimestamp as timestamp,",
						"          ProjectEarliestStartTimestamp as timestamp,",
						"          ProjectEarliestEndTimestamp as timestamp,",
						"          ProjectLatestStartTimestamp as timestamp,",
						"          ProjectLatestEndTimestamp as timestamp,",
						"          ProjectClosingTimestamp as timestamp,",
						"          ProjectRiskAssessmentStatement as string,",
						"          ProjectWorkStatement as string,",
						"          ProjectCharterStatement as string,",
						"          BusinessCaseStatement as string,",
						"          LocationId as integer,",
						"          ProjectGlAccountNumber as string,",
						"          ResponsibilityCenterId as integer,",
						"          ProjectNote as string",
						"     ),",
						"     mapColumn(",
						"          ProjectId = project_id,",
						"          ProjectName = follow_id",
						"     )) ~> Project",
						"komoku sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'ProjectPhase',",
						"     input(",
						"          ProjectId as integer,",
						"          ProjectPhaseId as integer,",
						"          ProjectPhaseTypeId as integer,",
						"          ProjectPhaseName as string,",
						"          ProjectPhaseDescription as string,",
						"          ProjectPhasePlannedStartDate as date,",
						"          ProjectPhasePlannedFinishDate as date,",
						"          ProjectPhaseActualStartDate as date,",
						"          ProjectPhaseActualFinishDate as date",
						"     ),",
						"     mapColumn(",
						"          ProjectId = project_id,",
						"          ProjectPhaseId = komoku_id,",
						"          ProjectPhaseName = jisshikomoku,",
						"          ProjectPhaseDescription = mokuhyochi",
						"     )) ~> ProjectPhase",
						"shokomoku sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'ProjectActivity',",
						"     input(",
						"          ProjectId as integer,",
						"          ActivityId as integer,",
						"          ActivityName as string,",
						"          ActivityDescription as string,",
						"          ActivityPlannedStartTimestamp as timestamp,",
						"          ActivityActualStartTimestamp as timestamp,",
						"          ActivityPlannedEndTimestamp as timestamp,",
						"          ActivityActualEndTimestamp as timestamp",
						"     ),",
						"     mapColumn(",
						"          ProjectId = project_id,",
						"          ActivityId = shokomoku_id,",
						"          ActivityName = naiyo",
						"     )) ~> ProjectActivity",
						"jishijiko sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'ProjectActivityTask',",
						"     input(",
						"          ProjectId as integer,",
						"          ActivityId as integer,",
						"          TaskId as integer,",
						"          ActivityTaskSequenceNumber as integer,",
						"          ActivityTaskNote as string",
						"     ),",
						"     mapColumn(",
						"          ProjectId = project_id,",
						"          ActivityId = shokomoku_id,",
						"          TaskId = jishijiko_id",
						"     )) ~> ProjectActivityTask",
						"ToTimestamp sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'Task',",
						"     input(",
						"          TaskId as integer,",
						"          TaskName as string,",
						"          TaskDescription as string,",
						"          TaskSpecificationStatement as string,",
						"          SequenceNumber as integer,",
						"          MilestoneIndicator as boolean,",
						"          CriticalPathTaskIndicator as boolean,",
						"          TaskNote as string,",
						"          TaskPlannedStartTimestamp as timestamp,",
						"          TaskScheduledStartTimestamp as timestamp,",
						"          TaskActualStartTimestamp as timestamp,",
						"          TaskPlannedCompletionTimestamp as timestamp,",
						"          TaskScheduledCompletionTimestamp as timestamp,",
						"          TaskActualCompletionTimestamp as timestamp,",
						"          TaskEarliestStartTimestamp as timestamp,",
						"          TaskLatestStartTimestamp as timestamp,",
						"          TaskEarliestCompletionTimestamp as timestamp,",
						"          TaskLatestCompletionTimestamp as timestamp,",
						"          TaskFloatHours as integer,",
						"          PlannedBillableLaborUnits as integer,",
						"          ActualBillableLaborUnits as integer,",
						"          PlannedBillableChargesAmount as decimal(18,2),",
						"          ActualBillableChargesAmount as decimal(18,2),",
						"          PlannedCostsAmount as decimal(18,2),",
						"          ActualCostsAmount as decimal(18,2),",
						"          TaskTypeId as integer,",
						"          LocationId as integer,",
						"          ResponsibilityCenterId as integer,",
						"          TaskGlAccountNumber as string",
						"     ),",
						"     mapColumn(",
						"          TaskId = jishijiko_id,",
						"          TaskName = jisshikomoku,",
						"          TaskPlannedStartTimestamp = start,",
						"          TaskPlannedCompletionTimestamp = End",
						"     )) ~> Task"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/poc_project_layer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/POC_Project_data_flat')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "poc_project_flat",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "poc_project_flat",
								"type": "DatasetReference"
							},
							"name": "source2"
						},
						{
							"dataset": {
								"referenceName": "poc_project_flat",
								"type": "DatasetReference"
							},
							"name": "source3"
						}
					],
					"sinks": [
						{
							"name": "ProjectPhase"
						},
						{
							"name": "ProjectActivity"
						},
						{
							"name": "Task"
						},
						{
							"name": "ProjectActivityTask"
						},
						{
							"name": "ProjectPhseActivity"
						}
					],
					"transformations": [
						{
							"name": "flatten1"
						},
						{
							"name": "flatten2"
						},
						{
							"name": "flatten3"
						},
						{
							"name": "cast1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          follow_id as string,",
						"          komoku as (comment as string, jisshikomoku as string, komoku_id as short, mokuhyochi as string)[],",
						"          project_id as integer,",
						"          shokomoku as (comment as string, komoku_id as short, naiyo as string, shokomoku_id as short, tanto_bumon as string)[],",
						"          shosai_jishijiko as (End as string, jishijiko_id as short, jisshikomoku as string, shokomoku_id as short, start as string)[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'singleDocument') ~> source1",
						"source(output(",
						"          follow_id as string,",
						"          komoku as (comment as string, jisshikomoku as string, komoku_id as short, mokuhyochi as string)[],",
						"          project_id as integer,",
						"          shokomoku as (comment as string, komoku_id as short, naiyo as string, shokomoku_id as short, tanto_bumon as string)[],",
						"          shosai_jishijiko as (End as string, jishijiko_id as short, jisshikomoku as string, shokomoku_id as short, start as string)[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'singleDocument') ~> source2",
						"source(output(",
						"          follow_id as string,",
						"          komoku as (comment as string, jisshikomoku as string, komoku_id as short, mokuhyochi as string)[],",
						"          project_id as integer,",
						"          shokomoku as (comment as string, komoku_id as short, naiyo as string, shokomoku_id as short, tanto_bumon as string)[],",
						"          shosai_jishijiko as (End as string, jishijiko_id as short, jisshikomoku as string, shokomoku_id as short, start as string)[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'singleDocument') ~> source3",
						"source1 foldDown(unroll(komoku),",
						"     mapColumn(",
						"          comment = komoku.comment,",
						"          jisshikomoku = komoku.jisshikomoku,",
						"          komoku_id = komoku.komoku_id,",
						"          mokuhyochi = komoku.mokuhyochi,",
						"          project_id",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten1",
						"source2 foldDown(unroll(shokomoku),",
						"     mapColumn(",
						"          komoku_id = shokomoku.komoku_id,",
						"          naiyo = shokomoku.naiyo,",
						"          shokomoku_id = shokomoku.shokomoku_id,",
						"          tanto_bumon = shokomoku.tanto_bumon,",
						"          project_id",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten2",
						"source3 foldDown(unroll(shosai_jishijiko),",
						"     mapColumn(",
						"          End = shosai_jishijiko.End,",
						"          jishijiko_id = shosai_jishijiko.jishijiko_id,",
						"          jisshikomoku = shosai_jishijiko.jisshikomoku,",
						"          shokomoku_id = shosai_jishijiko.shokomoku_id,",
						"          start = shosai_jishijiko.start,",
						"          project_id",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten3",
						"flatten3 cast(output(",
						"          End as timestamp 'yyyy-MM-dd\\'T\\'HH:mm:ss',",
						"          jishijiko_id as integer,",
						"          jisshikomoku as string,",
						"          start as timestamp 'yyyy-MM-dd\\'T\\'HH:mm:ss'",
						"     ),",
						"     errors: true) ~> cast1",
						"flatten1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'ProjectPhase',",
						"     input(",
						"          ProjectId as integer,",
						"          ProjectPhaseId as integer,",
						"          ProjectPhaseTypeId as integer,",
						"          ProjectPhaseName as string,",
						"          ProjectPhaseDescription as string,",
						"          ProjectPhasePlannedStartDate as date,",
						"          ProjectPhasePlannedFinishDate as date,",
						"          ProjectPhaseActualStartDate as date,",
						"          ProjectPhaseActualFinishDate as date",
						"     ),",
						"     mapColumn(",
						"          ProjectId = project_id,",
						"          ProjectPhaseId = komoku_id,",
						"          ProjectPhaseName = jisshikomoku,",
						"          ProjectPhaseDescription = mokuhyochi",
						"     )) ~> ProjectPhase",
						"flatten2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'ProjectActivity',",
						"     input(",
						"          ProjectId as integer,",
						"          ActivityId as integer,",
						"          ActivityName as string,",
						"          ActivityDescription as string,",
						"          ActivityPlannedStartTimestamp as timestamp,",
						"          ActivityActualStartTimestamp as timestamp,",
						"          ActivityPlannedEndTimestamp as timestamp,",
						"          ActivityActualEndTimestamp as timestamp",
						"     ),",
						"     mapColumn(",
						"          ProjectId = project_id,",
						"          ActivityId = shokomoku_id,",
						"          ActivityName = naiyo",
						"     )) ~> ProjectActivity",
						"cast1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'Task',",
						"     input(",
						"          TaskId as integer,",
						"          TaskName as string,",
						"          TaskDescription as string,",
						"          TaskSpecificationStatement as string,",
						"          SequenceNumber as integer,",
						"          MilestoneIndicator as boolean,",
						"          CriticalPathTaskIndicator as boolean,",
						"          TaskNote as string,",
						"          TaskPlannedStartTimestamp as timestamp,",
						"          TaskScheduledStartTimestamp as timestamp,",
						"          TaskActualStartTimestamp as timestamp,",
						"          TaskPlannedCompletionTimestamp as timestamp,",
						"          TaskScheduledCompletionTimestamp as timestamp,",
						"          TaskActualCompletionTimestamp as timestamp,",
						"          TaskEarliestStartTimestamp as timestamp,",
						"          TaskLatestStartTimestamp as timestamp,",
						"          TaskEarliestCompletionTimestamp as timestamp,",
						"          TaskLatestCompletionTimestamp as timestamp,",
						"          TaskFloatHours as integer,",
						"          PlannedBillableLaborUnits as integer,",
						"          ActualBillableLaborUnits as integer,",
						"          PlannedBillableChargesAmount as decimal(18,2),",
						"          ActualBillableChargesAmount as decimal(18,2),",
						"          PlannedCostsAmount as decimal(18,2),",
						"          ActualCostsAmount as decimal(18,2),",
						"          TaskTypeId as integer,",
						"          LocationId as integer,",
						"          ResponsibilityCenterId as integer,",
						"          TaskGlAccountNumber as string",
						"     ),",
						"     mapColumn(",
						"          TaskId = jishijiko_id,",
						"          TaskName = jisshikomoku,",
						"          TaskPlannedCompletionTimestamp = End,",
						"          TaskPlannedStartTimestamp = start",
						"     )) ~> Task",
						"flatten3 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'ProjectActivityTask',",
						"     input(",
						"          ProjectId as integer,",
						"          ActivityId as integer,",
						"          TaskId as integer,",
						"          ActivityTaskSequenceNumber as integer,",
						"          ActivityTaskNote as string",
						"     ),",
						"     mapColumn(",
						"          ProjectId = project_id,",
						"          ActivityId = shokomoku_id,",
						"          TaskId = jishijiko_id",
						"     )) ~> ProjectActivityTask",
						"flatten2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'POC_Database',",
						"     tableName: 'ProjectPhaseActivity',",
						"     input(",
						"          ProjectId as integer,",
						"          ProjectPhaseId as integer,",
						"          ActivityId as integer,",
						"          ProjectPhaseActivityNote as string",
						"     ),",
						"     mapColumn(",
						"          ProjectId = project_id,",
						"          ProjectPhaseId = komoku_id,",
						"          ActivityId = shokomoku_id",
						"     )) ~> ProjectPhseActivity"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/poc_project_flat')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Updated365task')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "d365potask",
								"type": "DatasetReference"
							},
							"name": "ProjectTask"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "d365_po_poc",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "taskupdate"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Task Name} as string,",
						"          {External ID} as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ProjectTask",
						"ProjectTask alterRow(upsertIf(true())) ~> taskupdate",
						"taskupdate sink(allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     input(",
						"          msdyn_actualmaterialcost as decimal(38,4),",
						"          msdyn_actualmaterialcost_base as decimal(38,4),",
						"          msdyn_actualsales as decimal(38,4),",
						"          owninguser as string,",
						"          importsequencenumber as integer,",
						"          msdyn_actualmaterialsales_base as decimal(38,4),",
						"          msdyn_description as string,",
						"          msdyn_actualend as timestamp,",
						"          msdyn_varianceofcost_base as decimal(38,2),",
						"          msdyn_outlinelevel as integer,",
						"          msdyn_actualfeesales_base as decimal(38,4),",
						"          msdyn_descriptionplaintext as string,",
						"          msdyn_salesvariance as decimal(38,2),",
						"          msdyn_effortremaining as decimal(38,2),",
						"          msdyn_plannedmaterialsales_base as decimal(38,4),",
						"          msdyn_projectsprintname as string,",
						"          owneridtype as string,",
						"          msdyn_totalplannedcost_base as decimal(38,4),",
						"          msdyn_plannedmaterialcost as decimal(38,4),",
						"          msdyn_costatcompleteestimate_base as decimal(38,2),",
						"          createdbyname as string,",
						"          msdyn_remainingsales as decimal(38,4),",
						"          msdyn_resourcecategorypricingdimensionname as string,",
						"          msdyn_actualexpensesales_base as decimal(38,4),",
						"          owneridname as string,",
						"          msdyn_salesvariance_base as decimal(38,2),",
						"          msdyn_actualsales_base as decimal(38,4),",
						"          msdyn_actualcost_base as decimal(38,4),",
						"          statuscode as integer,",
						"          msdyn_actualstart as timestamp,",
						"          createdonbehalfbyname as string,",
						"          msdyn_pfwmodifiedbyyominame as string,",
						"          msdyn_iscritical as boolean,",
						"          owningteam as string,",
						"          msdyn_plannedsales as decimal(38,4),",
						"          msdyn_plannedmaterialsales as decimal(38,4),",
						"          msdyn_totalplannedcost as decimal(38,4),",
						"          msdyn_plannedexpensecost_base as decimal(38,4),",
						"          msdyn_actualmaterialsales as decimal(38,4),",
						"          msdyn_duration as double,",
						"          msdyn_plannedsales_base as decimal(38,4),",
						"          modifiedbyname as string,",
						"          msdyn_plannedmaterialcost_base as decimal(38,4),",
						"          msdyn_pfwcreatedby as string,",
						"          statecodename as string,",
						"          msdyn_pfwmodifiedby as string,",
						"          msdyn_remainingcost as decimal(38,4),",
						"          msdyn_skipupdateestimatelinename as string,",
						"          modifiedonbehalfby as string,",
						"          versionnumber as long,",
						"          msdyn_subject as string,",
						"          msdyn_displaysequence as decimal(38,9),",
						"          msdyn_requestedhours as double,",
						"          msdyn_ismanual as boolean,",
						"          msdyn_msprojectclientid as string,",
						"          msdyn_plannedexpensecost as decimal(38,4),",
						"          owningbusinessunit as string,",
						"          createdon as timestamp,",
						"          msdyn_projectbucket as string,",
						"          msdyn_effortcompleted as decimal(38,2),",
						"          msdyn_resourceorganizationalunitid as string,",
						"          msdyn_transactioncategory as string,",
						"          modifiedonbehalfbyname as string,",
						"          msdyn_actualmilestonesales_base as decimal(38,4),",
						"          msdyn_parenttaskname as string,",
						"          createdonbehalfby as string,",
						"          msdyn_actualfeesales as decimal(38,4),",
						"          msdyn_totalactualcost as decimal(38,4),",
						"          msdyn_summary as boolean,",
						"          msdyn_finish as timestamp,",
						"          msdyn_actualexpensecost as decimal(38,4),",
						"          ownerid as string,",
						"          msdyn_actualexpensesales as decimal(38,4),",
						"          utcconversiontimezonecode as integer,",
						"          exchangerate as decimal(38,10),",
						"          msdyn_remainingsales_base as decimal(38,4),",
						"          createdonbehalfbyyominame as string,",
						"          msdyn_actualmilestonesales as decimal(38,4),",
						"          msdyn_progress as decimal(38,2),",
						"          msdyn_project as string,",
						"          msdyn_remainingcost_base as decimal(38,4),",
						"          msdyn_effort as double,",
						"          msdyn_scheduledstart as timestamp,",
						"          msdyn_costconsumptionpercentage as decimal(38,2),",
						"          msdyn_salesestimateatcomplete as decimal(38,2),",
						"          msdyn_priority as integer,",
						"          msdyn_totalactualsales_base as decimal(38,4),",
						"          msdyn_pfwmodifiedbyname as string,",
						"          msdyn_costatcompleteestimate as decimal(38,2),",
						"          processid as string,",
						"          msdyn_totalactualsales as decimal(38,4),",
						"          msdyn_plannedexpensesales as decimal(38,4),",
						"          transactioncurrencyid as string,",
						"          msdyn_organizationalunitpricingdimension as string,",
						"          statuscodename as string,",
						"          msdyn_salesconsumptionpercentage as decimal(38,2),",
						"          msdyn_ismilestonename as string,",
						"          statecode as integer,",
						"          owneridyominame as string,",
						"          msdyn_plannedcost as decimal(38,4),",
						"          msdyn_summaryname as string,",
						"          msdyn_pfwcreatedbyname as string,",
						"          createdbyyominame as string,",
						"          msdyn_totalplannedsales_base as decimal(38,4),",
						"          transactioncurrencyidname as string,",
						"          owningbusinessunitname as string,",
						"          msdyn_schedulevariance as double,",
						"          msdyn_plannedcost_base as decimal(38,4),",
						"          msdyn_organizationalunitpricingdimensionname as string,",
						"          modifiedby as string,",
						"          msdyn_linkstatusname as string,",
						"          msdyn_effortestimateatcomplete as double,",
						"          msdyn_resourceorganizationalunitidname as string,",
						"          modifiedon as timestamp,",
						"          msdyn_plannedexpensesales_base as decimal(38,4),",
						"          msdyn_actualcost as decimal(38,4),",
						"          modifiedbyyominame as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          msdyn_LinkStatus as integer,",
						"          msdyn_iscriticalname as string,",
						"          msdyn_ismanualname as string,",
						"          msdyn_start as timestamp,",
						"          msdyn_totalactualcost_base as decimal(38,4),",
						"          msdyn_skipupdateestimateline as boolean,",
						"          msdyn_resourcecategory as string,",
						"          msdyn_projectname as string,",
						"          msdyn_projecttaskid as string,",
						"          msdyn_pluginprocessingdata as integer,",
						"          cr3c6_externaltaskid as integer,",
						"          msdyn_actualexpensecost_base as decimal(38,4),",
						"          msdyn_scheduleddurationminutes as integer,",
						"          msdyn_ismilestone as boolean,",
						"          msdyn_pfwcreatedbyyominame as string,",
						"          msdyn_salesestimateatcomplete_base as decimal(38,2),",
						"          createdby as string,",
						"          traversedpath as string,",
						"          msdyn_parenttask as string,",
						"          msdyn_transactioncategoryname as string,",
						"          msdyn_totalplannedsales as decimal(38,4),",
						"          overriddencreatedon as timestamp,",
						"          msdyn_varianceofcost as decimal(38,2),",
						"          msdyn_resourcecategorypricingdimension as string,",
						"          msdyn_resourcecategoryname as string,",
						"          timezoneruleversionnumber as integer,",
						"          msdyn_projectbucketname as string,",
						"          msdyn_projectsprint as string,",
						"          msdyn_scheduledend as timestamp,",
						"          {owninguser@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {owningteam@aadobjectid_membershiptype@azureactivedirectoryobjectid} as string,",
						"          {owningteam@aadobjectid_membershiptype@membershiptype} as integer,",
						"          {msdyn_pfwcreatedby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {msdyn_pfwmodifiedby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {modifiedonbehalfby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {createdonbehalfby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {modifiedby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {createdby@aadobjectid@azureactivedirectoryobjectid} as string,",
						"          {msdyn_parenttask@cr3c6_externlid@cr3c6_externaltaskid} as integer",
						"     ),",
						"     store: 'dynamics',",
						"     format: 'dynamicsformat',",
						"     entity: 'msdyn_projecttask',",
						"     timeout: 30,",
						"     deletable: false,",
						"     insertable: false,",
						"     updateable: false,",
						"     upsertable: true,",
						"     alternateKeyName: 'cr3c6_externlid',",
						"     mapColumn(",
						"          msdyn_subject = {Task Name},",
						"          cr3c6_externaltaskid = {External ID}",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/d365potask')]",
				"[concat(variables('workspaceId'), '/linkedServices/d365_po_poc')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 10')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [DocumentId]\n,[DocumentName]\n,[DocumentDescription]\n,[GlobalDocumentTypeIdentifier]\n,[DocumentScopeStatement]\n,[DocumentRevisionNumber]\n,[DocumentCreatedTimestamp]\n,[DocumentCompletedTimestamp]\n,[DocumentFiledTimestamp]\n,[DocumentFirstPublishedTimestamp]\n,[DocumentMinimumRetentionTimestamp]\n,[DocumentCopyrightTimestamp]\n,[DocumentDeletedTimestamp]\n,[DocumentImage]\n,[DocumentText]\n,[DocumentNote]\n,[NumberOfPages]\n,[PageSize]\n,[DocumentUrl]\n,[IsoLanguageId]\n,[DeliveryMethodId]\n,[DocumentFormatTypeId]\n,[DocumentTypeId]\n,[MediaTypeId]\n,[CountryId]\n,[StateId]\n,[IdentificationId]\n FROM [POC_Database].[dbo].[Document]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "POC_Database",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 11')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [ProjectId]\n,[ProjectName]\n,[ProjectDescription]\n,[ProjectTypeId]\n,[ProjectPlannedStartTimestamp]\n,[ProjectPlannedEndTimestamp]\n,[ProjectEarliestStartTimestamp]\n,[ProjectEarliestEndTimestamp]\n,[ProjectLatestStartTimestamp]\n,[ProjectLatestEndTimestamp]\n,[ProjectClosingTimestamp]\n,[ProjectRiskAssessmentStatement]\n,[ProjectWorkStatement]\n,[ProjectCharterStatement]\n,[BusinessCaseStatement]\n,[LocationId]\n,[ProjectGlAccountNumber]\n,[ResponsibilityCenterId]\n,[ProjectNote]\n FROM [POC_Database].[dbo].[Project]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "POC_Database",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 12')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [ProjectId]\n,[ProjectName]\n,[ProjectDescription]\n,[ProjectTypeId]\n,[ProjectPlannedStartTimestamp]\n,[ProjectPlannedEndTimestamp]\n,[ProjectEarliestStartTimestamp]\n,[ProjectEarliestEndTimestamp]\n,[ProjectLatestStartTimestamp]\n,[ProjectLatestEndTimestamp]\n,[ProjectClosingTimestamp]\n,[ProjectRiskAssessmentStatement]\n,[ProjectWorkStatement]\n,[ProjectCharterStatement]\n,[BusinessCaseStatement]\n,[LocationId]\n,[ProjectGlAccountNumber]\n,[ResponsibilityCenterId]\n,[ProjectNote]\n FROM [POC_Database].[dbo].[Project]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "POC_Database",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 13')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [TaskId]\n,[TaskName]\n,[TaskDescription]\n,[TaskSpecificationStatement]\n,[SequenceNumber]\n,[MilestoneIndicator]\n,[CriticalPathTaskIndicator]\n,[TaskNote]\n,[TaskPlannedStartTimestamp]\n,[TaskScheduledStartTimestamp]\n,[TaskActualStartTimestamp]\n,[TaskPlannedCompletionTimestamp]\n,[TaskScheduledCompletionTimestamp]\n,[TaskActualCompletionTimestamp]\n,[TaskEarliestStartTimestamp]\n,[TaskLatestStartTimestamp]\n,[TaskEarliestCompletionTimestamp]\n,[TaskLatestCompletionTimestamp]\n,[TaskFloatHours]\n,[PlannedBillableLaborUnits]\n,[ActualBillableLaborUnits]\n,[PlannedBillableChargesAmount]\n,[ActualBillableChargesAmount]\n,[PlannedCostsAmount]\n,[ActualCostsAmount]\n,[TaskTypeId]\n,[LocationId]\n,[ResponsibilityCenterId]\n,[TaskGlAccountNumber]\n FROM [POC_Database].[dbo].[Task]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "POC_Database",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 14')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [ProjectId]\n,[ProjectName]\n,[ProjectDescription]\n,[ProjectTypeId]\n,[ProjectPlannedStartTimestamp]\n,[ProjectPlannedEndTimestamp]\n,[ProjectEarliestStartTimestamp]\n,[ProjectEarliestEndTimestamp]\n,[ProjectLatestStartTimestamp]\n,[ProjectLatestEndTimestamp]\n,[ProjectClosingTimestamp]\n,[ProjectRiskAssessmentStatement]\n,[ProjectWorkStatement]\n,[ProjectCharterStatement]\n,[BusinessCaseStatement]\n,[LocationId]\n,[ProjectGlAccountNumber]\n,[ResponsibilityCenterId]\n,[ProjectNote]\n FROM [POC_Database].[dbo].[Project]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "POC_Database",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 15')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [ProjectId]\n,[ProjectName]\n,[ProjectDescription]\n,[ProjectTypeId]\n,[ProjectPlannedStartTimestamp]\n,[ProjectPlannedEndTimestamp]\n,[ProjectEarliestStartTimestamp]\n,[ProjectEarliestEndTimestamp]\n,[ProjectLatestStartTimestamp]\n,[ProjectLatestEndTimestamp]\n,[ProjectClosingTimestamp]\n,[ProjectRiskAssessmentStatement]\n,[ProjectWorkStatement]\n,[ProjectCharterStatement]\n,[BusinessCaseStatement]\n,[LocationId]\n,[ProjectGlAccountNumber]\n,[ResponsibilityCenterId]\n,[ProjectNote]\n FROM [POC_Database].[dbo].[Project]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "POC_Database",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 16')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [TaskId]\n,[TaskName]\n,[TaskDescription]\n,[TaskSpecificationStatement]\n,[SequenceNumber]\n,[MilestoneIndicator]\n,[CriticalPathTaskIndicator]\n,[TaskNote]\n,[TaskPlannedStartTimestamp]\n,[TaskScheduledStartTimestamp]\n,[TaskActualStartTimestamp]\n,[TaskPlannedCompletionTimestamp]\n,[TaskScheduledCompletionTimestamp]\n,[TaskActualCompletionTimestamp]\n,[TaskEarliestStartTimestamp]\n,[TaskLatestStartTimestamp]\n,[TaskEarliestCompletionTimestamp]\n,[TaskLatestCompletionTimestamp]\n,[TaskFloatHours]\n,[PlannedBillableLaborUnits]\n,[ActualBillableLaborUnits]\n,[PlannedBillableChargesAmount]\n,[ActualBillableChargesAmount]\n,[PlannedCostsAmount]\n,[ActualCostsAmount]\n,[TaskTypeId]\n,[LocationId]\n,[ResponsibilityCenterId]\n,[TaskGlAccountNumber]\n FROM [POC_Database].[dbo].[Task]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "POC_Database",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 17')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [TaskId]\n,[TaskName]\n,[TaskDescription]\n,[TaskSpecificationStatement]\n,[SequenceNumber]\n,[MilestoneIndicator]\n,[CriticalPathTaskIndicator]\n,[TaskNote]\n,[TaskPlannedStartTimestamp]\n,[TaskScheduledStartTimestamp]\n,[TaskActualStartTimestamp]\n,[TaskPlannedCompletionTimestamp]\n,[TaskScheduledCompletionTimestamp]\n,[TaskActualCompletionTimestamp]\n,[TaskEarliestStartTimestamp]\n,[TaskLatestStartTimestamp]\n,[TaskEarliestCompletionTimestamp]\n,[TaskLatestCompletionTimestamp]\n,[TaskFloatHours]\n,[PlannedBillableLaborUnits]\n,[ActualBillableLaborUnits]\n,[PlannedBillableChargesAmount]\n,[ActualBillableChargesAmount]\n,[PlannedCostsAmount]\n,[ActualCostsAmount]\n,[TaskTypeId]\n,[LocationId]\n,[ResponsibilityCenterId]\n,[TaskGlAccountNumber]\n FROM [POC_Database].[dbo].[Task]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "POC_Database",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 18')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [TaskId]\n,[ResourceId]\n,[ResourceNumber]\n,[ResourceAmount]\n,[ResourceQuantity]\n FROM [POC_Database].[dbo].[TaskResource]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "POC_Database",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 8')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [DocumentId]\n,[DocumentName]\n,[DocumentDescription]\n,[GlobalDocumentTypeIdentifier]\n,[DocumentScopeStatement]\n,[DocumentRevisionNumber]\n,[DocumentCreatedTimestamp]\n,[DocumentCompletedTimestamp]\n,[DocumentFiledTimestamp]\n,[DocumentFirstPublishedTimestamp]\n,[DocumentMinimumRetentionTimestamp]\n,[DocumentCopyrightTimestamp]\n,[DocumentDeletedTimestamp]\n,[DocumentImage]\n,[DocumentText]\n,[DocumentNote]\n,[NumberOfPages]\n,[PageSize]\n,[DocumentUrl]\n,[IsoLanguageId]\n,[DeliveryMethodId]\n,[DocumentFormatTypeId]\n,[DocumentTypeId]\n,[MediaTypeId]\n,[CountryId]\n,[StateId]\n,[IdentificationId]\n FROM [POC_Database].[dbo].[Document]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "POC_Database",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 9')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [TaskId]\n,[TaskName]\n,[TaskDescription]\n,[TaskSpecificationStatement]\n,[SequenceNumber]\n,[MilestoneIndicator]\n,[CriticalPathTaskIndicator]\n,[TaskNote]\n,[TaskPlannedStartTimestamp]\n,[TaskScheduledStartTimestamp]\n,[TaskActualStartTimestamp]\n,[TaskPlannedCompletionTimestamp]\n,[TaskScheduledCompletionTimestamp]\n,[TaskActualCompletionTimestamp]\n,[TaskEarliestStartTimestamp]\n,[TaskLatestStartTimestamp]\n,[TaskEarliestCompletionTimestamp]\n,[TaskLatestCompletionTimestamp]\n,[TaskFloatHours]\n,[PlannedBillableLaborUnits]\n,[ActualBillableLaborUnits]\n,[PlannedBillableChargesAmount]\n,[ActualBillableChargesAmount]\n,[PlannedCostsAmount]\n,[ActualCostsAmount]\n,[TaskTypeId]\n,[LocationId]\n,[ResponsibilityCenterId]\n,[TaskGlAccountNumber]\n FROM [POC_Database].[dbo].[Task]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "POC_Database",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/POC_Database')]",
			"type": "Microsoft.Synapse/workspaces/databases",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"Ddls": [
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "POC_Database",
							"EntityType": "DATABASE",
							"Origin": {
								"Type": "SPARK"
							},
							"Properties": {
								"IsSyMSCDMDatabase": true,
								"DerivedModelDBInfo": "{\"ModelDirectives\":{\"BaseModel\":{\"Name\":\"Manufacturing\",\"Version\":\"0.1.0\"}}}"
							},
							"Source": {
								"Provider": "ADLS",
								"Location": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database",
								"Properties": {
									"FormatType": "parquet",
									"LinkedServiceName": "posynapsetest002-WorkspaceDefaultStorage"
								}
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Document",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Description": "A specific physical (written or printed) paper or electronic file that contains information.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "DocumentId",
										"Description": "The unique identifier of a Document.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentId"
										}
									},
									{
										"Name": "DocumentName",
										"Description": "The name of the Document.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentName"
										}
									},
									{
										"Name": "DocumentDescription",
										"Description": "The description of the Document.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentDescription"
										}
									},
									{
										"Name": "GlobalDocumentTypeIdentifier",
										"Description": "The Global Document Type Identifier (GDTI) is part of the GS1 system of standards. It is used to identify a document by type or specifically as required.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 30,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "GlobalDocumentTypeIdentifier"
										}
									},
									{
										"Name": "DocumentScopeStatement",
										"Description": "The scope of the document.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentScopeStatement"
										}
									},
									{
										"Name": "DocumentRevisionNumber",
										"Description": "The revision number of the associated document.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentRevisionNumber"
										}
									},
									{
										"Name": "DocumentCreatedTimestamp",
										"Description": "The timestamp that the Document was created.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentCreatedTimestamp"
										}
									},
									{
										"Name": "DocumentCompletedTimestamp",
										"Description": "The timestamp that the document was completed.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentCompletedTimestamp"
										}
									},
									{
										"Name": "DocumentFiledTimestamp",
										"Description": "The timestamp that the document was filed.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentFiledTimestamp"
										}
									},
									{
										"Name": "DocumentFirstPublishedTimestamp",
										"Description": "The timestamp that the document was first published.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentFirstPublishedTimestamp"
										}
									},
									{
										"Name": "DocumentMinimumRetentionTimestamp",
										"Description": "The timestamp that a document must be retained until. This is typically the earliest timestamp that a document can be deleted and in many cases the timestamp that the document should be deleted.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentMinimumRetentionTimestamp"
										}
									},
									{
										"Name": "DocumentCopyrightTimestamp",
										"Description": "The document copyright timestamp.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentCopyrightTimestamp"
										}
									},
									{
										"Name": "DocumentDeletedTimestamp",
										"Description": "The timestamp that the Document was deleted. Once a document is deleted all data associated with the document, attributes of the document (including Document Image) and related entities may be deleted.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentDeletedTimestamp"
										}
									},
									{
										"Name": "DocumentImage",
										"Description": "The image or text of the document (scanned).",
										"OriginDataTypeName": {
											"TypeName": "binary",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "binary"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentImage"
										}
									},
									{
										"Name": "DocumentText",
										"Description": "The text of the document.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentText"
										}
									},
									{
										"Name": "DocumentNote",
										"Description": "A note, comment or additional information regarding the Document.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentNote"
										}
									},
									{
										"Name": "NumberOfPages",
										"Description": "The number of document pages.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "NumberOfPages"
										}
									},
									{
										"Name": "PageSize",
										"Description": "The size of the document pages.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "PageSize"
										}
									},
									{
										"Name": "DocumentUrl",
										"Description": "The URL at which the document is located on the www.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2083,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentUrl"
										}
									},
									{
										"Name": "IsoLanguageId",
										"Description": "The unique identifier of an ISO Language.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "IsoLanguageId"
										}
									},
									{
										"Name": "DeliveryMethodId",
										"Description": "The unique identifier of a document delivery method.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DeliveryMethodId"
										}
									},
									{
										"Name": "DocumentFormatTypeId",
										"Description": "The unique identifier of a document format type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentFormatTypeId"
										}
									},
									{
										"Name": "DocumentTypeId",
										"Description": "The unique identifier of a Document Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "DocumentTypeId"
										}
									},
									{
										"Name": "MediaTypeId",
										"Description": "The unique identifier of a Media Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "MediaTypeId"
										}
									},
									{
										"Name": "CountryId",
										"Description": "The unique identifier of the Country.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "CountryId"
										}
									},
									{
										"Name": "StateId",
										"Description": "The unique identifier of a State.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "StateId"
										}
									},
									{
										"Name": "IdentificationId",
										"Description": "The unique identifier of the identification.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Document.cdm.json/Document",
											"Name": "IdentificationId"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/Document",
										"FormatTypeSetToDatabaseDefault": true
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/Document",
									"Properties": {
										"LinkedServiceName": "posynapsetest002-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"DocumentId\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentId\"},\"DocumentName\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentName\"},\"DocumentDescription\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentDescription\"},\"GlobalDocumentTypeIdentifier\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"GlobalDocumentTypeIdentifier\"},\"DocumentScopeStatement\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentScopeStatement\"},\"DocumentRevisionNumber\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentRevisionNumber\"},\"DocumentCreatedTimestamp\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentCreatedTimestamp\"},\"DocumentCompletedTimestamp\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentCompletedTimestamp\"},\"DocumentFiledTimestamp\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentFiledTimestamp\"},\"DocumentFirstPublishedTimestamp\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentFirstPublishedTimestamp\"},\"DocumentMinimumRetentionTimestamp\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentMinimumRetentionTimestamp\"},\"DocumentCopyrightTimestamp\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentCopyrightTimestamp\"},\"DocumentDeletedTimestamp\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentDeletedTimestamp\"},\"DocumentImage\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentImage\"},\"DocumentText\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentText\"},\"DocumentNote\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentNote\"},\"NumberOfPages\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"NumberOfPages\"},\"PageSize\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"PageSize\"},\"DocumentUrl\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentUrl\"},\"IsoLanguageId\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"IsoLanguageId\"},\"DeliveryMethodId\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DeliveryMethodId\"},\"DocumentFormatTypeId\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentFormatTypeId\"},\"DocumentTypeId\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentTypeId\"},\"MediaTypeId\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"MediaTypeId\"},\"CountryId\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"CountryId\"},\"StateId\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"StateId\"},\"IdentificationId\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"IdentificationId\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"Document\",\"path\":\"Document.cdm.json/Document\"},\"description\":\"A specific physical (written or printed) paper or electronic file that contains information.\",\"primaryKey\":[\"DocumentId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Document.\",\"isNullable\":false,\"name\":\"DocumentId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the Document.\",\"isNullable\":true,\"name\":\"DocumentName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of the Document.\",\"isNullable\":true,\"name\":\"DocumentDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"GlobalDocumentTypeIdentifier\"},\"dataType\":\"string\",\"dataTypeLength\":30,\"description\":\"The Global Document Type Identifier (GDTI) is part of the GS1 system of standards. It is used to identify a document by type or specifically as required.\",\"isNullable\":true,\"name\":\"GlobalDocumentTypeIdentifier\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentScopeStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"The scope of the document.\",\"isNullable\":true,\"name\":\"DocumentScopeStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentRevisionNumber\"},\"dataType\":\"integer\",\"description\":\"The revision number of the associated document.\",\"isNullable\":true,\"name\":\"DocumentRevisionNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentCreatedTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the Document was created.\",\"isNullable\":true,\"name\":\"DocumentCreatedTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentCompletedTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the document was completed.\",\"isNullable\":true,\"name\":\"DocumentCompletedTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentFiledTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the document was filed.\",\"isNullable\":true,\"name\":\"DocumentFiledTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentFirstPublishedTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the document was first published.\",\"isNullable\":true,\"name\":\"DocumentFirstPublishedTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentMinimumRetentionTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that a document must be retained until. This is typically the earliest timestamp that a document can be deleted and in many cases the timestamp that the document should be deleted.\",\"isNullable\":true,\"name\":\"DocumentMinimumRetentionTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentCopyrightTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The document copyright timestamp.\",\"isNullable\":true,\"name\":\"DocumentCopyrightTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentDeletedTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The timestamp that the Document was deleted. Once a document is deleted all data associated with the document, attributes of the document (including Document Image) and related entities may be deleted.\",\"isNullable\":true,\"name\":\"DocumentDeletedTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentImage\"},\"dataType\":\"binary\",\"description\":\"The image or text of the document (scanned).\",\"isNullable\":true,\"name\":\"DocumentImage\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentText\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"The text of the document.\",\"isNullable\":true,\"name\":\"DocumentText\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information regarding the Document.\",\"isNullable\":true,\"name\":\"DocumentNote\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"NumberOfPages\"},\"dataType\":\"integer\",\"description\":\"The number of document pages.\",\"isNullable\":true,\"name\":\"NumberOfPages\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"PageSize\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"The size of the document pages.\",\"isNullable\":true,\"name\":\"PageSize\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentUrl\"},\"dataType\":\"string\",\"dataTypeLength\":2083,\"description\":\"The URL at which the document is located on the www.\",\"isNullable\":true,\"name\":\"DocumentUrl\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"IsoLanguageId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an ISO Language.\",\"isNullable\":true,\"name\":\"IsoLanguageId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DeliveryMethodId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a document delivery method.\",\"isNullable\":true,\"name\":\"DeliveryMethodId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentFormatTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a document format type.\",\"isNullable\":true,\"name\":\"DocumentFormatTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"DocumentTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Document Type.\",\"isNullable\":true,\"name\":\"DocumentTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"MediaTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Media Type.\",\"isNullable\":true,\"name\":\"MediaTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"CountryId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the Country.\",\"isNullable\":true,\"name\":\"CountryId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"StateId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a State.\",\"isNullable\":true,\"name\":\"StateId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Document.cdm.json/Document\",\"name\":\"IdentificationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the identification.\",\"isNullable\":true,\"name\":\"IdentificationId\"}]}}}",
								"Description": "A specific physical (written or printed) paper or electronic file that contains information.",
								"DisplayFolderInfo": "{\"name\":\"Document Management\",\"colorCode\":\"#001475\"}",
								"PrimaryKeys": "DocumentId",
								"spark.sql.sources.provider": "parquet"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "DocumentType",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Description": "A categorization of document(s) based on common function, application or usage.\n\nEx:\n- Account Statement\n- Account Application\n- Credit Review\n- Credit Increase Request\n- Credit Increase Authorization\n- Account Suspension Notice\n- Deposit Account Agreement\n- Landlord Agreement\n- Refund\n- Credit Memo\n- RFI\n- RFP\n- Order\n- PO\n- Invoice\n- Building Permit\n- Construction Permit\n- Regulatory\n- Operating Permit\n- Complaint letter\n- Marketing correspondence\n- Non-disclosure Agreement\n- Employment Contract\n- Permanent Resident Care\n- Social Security Card\n- Cost justification\n- Pricing\n- Maintenance plan\n- User Manual\n- Engineering Specification\n- Functional Design\n- Audit Request\n- Auditor Report\n- Letter of Credit\n- Performance Bond\n- Power of Attorney\n- Audit Request\n- Auditor Report\n- Letter of Credit\n- Performance Bond\n- Power of Attorney\n- Regulatory\n- Engineering Specification\n- User Manual\n- Functional Design\n- Pricing\n\nwhere:\n\nDevelopment agreement (DA)\nOne of the range of agreements between governments and petroleum-resource developers is the DA or one of its variants - the Development and Fiscal Agreement (DFA) or the Development and Production Sharing Agreement (DPSA).\n\nEnabling agreement\nProvides the general terms and conditions for the purchase, sale, or exchange of LNG, pipeline gas and electricity, but does not list specific contract details.\n\nEnvironmental-impact assessment (EIA)\nAn assessment of the impact of an industrial installation or activity on the surrounding environment, conducted before work on that activity has commenced. The original baseline study, a key part of this process, describes the original conditions.\n\nFinancial-guarantee contract\nA contract that requires the issuer to make specified payments to reimburse the holder for a loss it incurs because a specified debtor fails to make payment when due in accordance with the original or modified terms of a debt instrument.\n\nForward contract\nA commitment to buy (long) or sell (short) an underlying asset at a specified date at a price (known as the exercise or forward price) specified at the origination of the contract.\n\nFutures\nContracts to buy or sell a commodity, such as gas, for a given price on a given date. Gas futures can usually be traded on a major exchange, such as NYMEX or ICE. \n\nHeads of agreement (HOA)\nA preliminary agreement covering the outline terms for the sale and purchase of LNG or natural gas. See Sales and purchase agreement (SPA)\n\nLong-term gas contract\nA supply contract in the physical market covering natural gas deliveries.\n\nOperational balancing agreements (OBAs)\nAgreements between pipelines and parties at delivery or receipt points, whereby the parties agree to specified procedures for balancing discrepancies between the nominated levels of service and the actual quantities.\nOperational-flow orders (OFOs)\nOrders that are issued by a pipeline to protect the operational integrity of the line.\n\nProduction-sharing contract (PSC)\nContract between a government and a company, granting the company a contractual right to explore and produce hydrocarbons in a specified area in enabling the company to recover its costs and a certain profit.\n\nSales and purchase agreement (SPA)\nA definitive contract between a seller and buyer for the sale and purchase of a quantity of natural gas or LNG for delivery during a specified period at a specified price. See Annual delivery programme (ADP) and Heads of agreement (HOA).\n\nTransportation contract\nContract setting forth the terms and conditions applicable to natural gas or electricity transportation services.\nEnabling agreement: provides the general terms and conditions for the purchase, sale, or exchange of LNG, pipeline gas and electricity, but does not list specific contract details. \nHeads of agreement (HOA): a preliminary agreement covering the outline terms for the sale and purchase of LNG or natural gas. See Sales and purchase agreement (SPA). \nOperational balancing agreements (OBAs): agreements between pipelines and parties at delivery or receipt points, whereby the parties agree to specified procedures for balancing discrepancies between the nominated levels of service and the actual quantities. \nSales and purchase agreement (SPA): a definitive contract between a seller and buyer for the sale and purchase of a quantity of natural gas or LNG for delivery during a specified",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "DocumentTypeId",
										"Description": "The unique identifier of a Document Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "DocumentType.cdm.json/DocumentType",
											"Name": "DocumentTypeId"
										}
									},
									{
										"Name": "DocumentTypeName",
										"Description": "The name of a Document Type.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "DocumentType.cdm.json/DocumentType",
											"Name": "DocumentTypeName"
										}
									},
									{
										"Name": "DocumentTypeDescription",
										"Description": "The description of a Document Type.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "DocumentType.cdm.json/DocumentType",
											"Name": "DocumentTypeDescription"
										}
									},
									{
										"Name": "GlobalDocumentTypeIdentifier",
										"Description": "The Global Document Type Identifier (GDTI) is part of the GS1 system of standards. It is used to identify a document by type or specifically as required.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 30,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "DocumentType.cdm.json/DocumentType",
											"Name": "GlobalDocumentTypeIdentifier"
										}
									},
									{
										"Name": "DocumentTypeRetentionPeriod",
										"Description": "The length of time that a document of a particular document type must be kept from the date that it was completed.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 3,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "DocumentType.cdm.json/DocumentType",
											"Name": "DocumentTypeRetentionPeriod"
										}
									},
									{
										"Name": "DocumentTypeRetentionPeriodUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "DocumentType.cdm.json/DocumentType",
											"Name": "DocumentTypeRetentionPeriodUomId"
										}
									},
									{
										"Name": "DocumentTypeRetentionPeriodNote",
										"Description": "A note, comment or additional information regarding the document type retention period.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "DocumentType.cdm.json/DocumentType",
											"Name": "DocumentTypeRetentionPeriodNote"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/DocumentType",
										"FormatTypeSetToDatabaseDefault": true
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/DocumentType",
									"Properties": {
										"LinkedServiceName": "posynapsetest002-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"DocumentTypeId\":{\"entity\":\"DocumentType.cdm.json/DocumentType\",\"name\":\"DocumentTypeId\"},\"DocumentTypeName\":{\"entity\":\"DocumentType.cdm.json/DocumentType\",\"name\":\"DocumentTypeName\"},\"DocumentTypeDescription\":{\"entity\":\"DocumentType.cdm.json/DocumentType\",\"name\":\"DocumentTypeDescription\"},\"GlobalDocumentTypeIdentifier\":{\"entity\":\"DocumentType.cdm.json/DocumentType\",\"name\":\"GlobalDocumentTypeIdentifier\"},\"DocumentTypeRetentionPeriod\":{\"entity\":\"DocumentType.cdm.json/DocumentType\",\"name\":\"DocumentTypeRetentionPeriod\"},\"DocumentTypeRetentionPeriodUomId\":{\"entity\":\"DocumentType.cdm.json/DocumentType\",\"name\":\"DocumentTypeRetentionPeriodUomId\"},\"DocumentTypeRetentionPeriodNote\":{\"entity\":\"DocumentType.cdm.json/DocumentType\",\"name\":\"DocumentTypeRetentionPeriodNote\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"DocumentType\",\"path\":\"DocumentType.cdm.json/DocumentType\"},\"description\":\"A categorization of document(s) based on common function, application or usage.\\n\\nEx:\\n- Account Statement\\n- Account Application\\n- Credit Review\\n- Credit Increase Request\\n- Credit Increase Authorization\\n- Account Suspension Notice\\n- Deposit Account Agreement\\n- Landlord Agreement\\n- Refund\\n- Credit Memo\\n- RFI\\n- RFP\\n- Order\\n- PO\\n- Invoice\\n- Building Permit\\n- Construction Permit\\n- Regulatory\\n- Operating Permit\\n- Complaint letter\\n- Marketing correspondence\\n- Non-disclosure Agreement\\n- Employment Contract\\n- Permanent Resident Care\\n- Social Security Card\\n- Cost justification\\n- Pricing\\n- Maintenance plan\\n- User Manual\\n- Engineering Specification\\n- Functional Design\\n- Audit Request\\n- Auditor Report\\n- Letter of Credit\\n- Performance Bond\\n- Power of Attorney\\n- Audit Request\\n- Auditor Report\\n- Letter of Credit\\n- Performance Bond\\n- Power of Attorney\\n- Regulatory\\n- Engineering Specification\\n- User Manual\\n- Functional Design\\n- Pricing\\n\\nwhere:\\n\\nDevelopment agreement (DA)\\nOne of the range of agreements between governments and petroleum-resource developers is the DA or one of its variants - the Development and Fiscal Agreement (DFA) or the Development and Production Sharing Agreement (DPSA).\\n\\nEnabling agreement\\nProvides the general terms and conditions for the purchase, sale, or exchange of LNG, pipeline gas and electricity, but does not list specific contract details.\\n\\nEnvironmental-impact assessment (EIA)\\nAn assessment of the impact of an industrial installation or activity on the surrounding environment, conducted before work on that activity has commenced. The original baseline study, a key part of this process, describes the original conditions.\\n\\nFinancial-guarantee contract\\nA contract that requires the issuer to make specified payments to reimburse the holder for a loss it incurs because a specified debtor fails to make payment when due in accordance with the original or modified terms of a debt instrument.\\n\\nForward contract\\nA commitment to buy (long) or sell (short) an underlying asset at a specified date at a price (known as the exercise or forward price) specified at the origination of the contract.\\n\\nFutures\\nContracts to buy or sell a commodity, such as gas, for a given price on a given date. Gas futures can usually be traded on a major exchange, such as NYMEX or ICE. \\n\\nHeads of agreement (HOA)\\nA preliminary agreement covering the outline terms for the sale and purchase of LNG or natural gas. See Sales and purchase agreement (SPA)\\n\\nLong-term gas contract\\nA supply contract in the physical market covering natural gas deliveries.\\n\\nOperational balancing agreements (OBAs)\\nAgreements between pipelines and parties at delivery or receipt points, whereby the parties agree to specified procedures for balancing discrepancies between the nominated levels of service and the actual quantities.\\nOperational-flow orders (OFOs)\\nOrders that are issued by a pipeline to protect the operational integrity of the line.\\n\\nProduction-sharing contract (PSC)\\nContract between a government and a company, granting the company a contractual right to explore and produce hydrocarbons in a specified area in enabling the company to recover its costs and a certain profit.\\n\\nSales and purchase agreement (SPA)\\nA definitive contract between a seller and buyer for the sale and purchase of a quantity of natural gas or LNG for delivery during a specified period at a specified price. See Annual delivery programme (ADP) and Heads of agreement (HOA).\\n\\nTransportation contract\\nContract setting forth the terms and conditions applicable to natural gas or electricity transportation services.\\nEnabling agreement: provides the general terms and conditions for the purchase, sale, or exchange of LNG, pipeline gas and electricity, but does not list specific contract details. \\nHeads of agreement (HOA): a preliminary agreement covering the outline terms for the sale and purchase of LNG or natural gas. See Sales and purchase agreement (SPA). \\nOperational balancing agreements (OBAs): agreements between pipelines and parties at delivery or receipt points, whereby the parties agree to specified procedures for balancing discrepancies between the nominated levels of service and the actual quantities. \\nSales and purchase agreement (SPA): a definitive contract between a seller and buyer for the sale and purchase of a quantity of natural gas or LNG for delivery during a specified\",\"primaryKey\":[\"DocumentTypeId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"DocumentType.cdm.json/DocumentType\",\"name\":\"DocumentTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Document Type.\",\"isNullable\":false,\"name\":\"DocumentTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"DocumentType.cdm.json/DocumentType\",\"name\":\"DocumentTypeName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of a Document Type.\",\"isNullable\":true,\"name\":\"DocumentTypeName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"DocumentType.cdm.json/DocumentType\",\"name\":\"DocumentTypeDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of a Document Type.\",\"isNullable\":true,\"name\":\"DocumentTypeDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"DocumentType.cdm.json/DocumentType\",\"name\":\"GlobalDocumentTypeIdentifier\"},\"dataType\":\"string\",\"dataTypeLength\":30,\"description\":\"The Global Document Type Identifier (GDTI) is part of the GS1 system of standards. It is used to identify a document by type or specifically as required.\",\"isNullable\":true,\"name\":\"GlobalDocumentTypeIdentifier\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"DocumentType.cdm.json/DocumentType\",\"name\":\"DocumentTypeRetentionPeriod\"},\"dataType\":\"decimal\",\"dataTypeLength\":3,\"description\":\"The length of time that a document of a particular document type must be kept from the date that it was completed.\",\"isNullable\":true,\"scale\":0,\"name\":\"DocumentTypeRetentionPeriod\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"DocumentType.cdm.json/DocumentType\",\"name\":\"DocumentTypeRetentionPeriodUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"DocumentTypeRetentionPeriodUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"DocumentType.cdm.json/DocumentType\",\"name\":\"DocumentTypeRetentionPeriodNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information regarding the document type retention period.\",\"isNullable\":true,\"name\":\"DocumentTypeRetentionPeriodNote\"}]}}}",
								"Description": "A categorization of document(s) based on common function, application or usage.\n\nEx:\n- Account Statement\n- Account Application\n- Credit Review\n- Credit Increase Request\n- Credit Increase Authorization\n- Account Suspension Notice\n- Deposit Account Agreement\n- Landlord Agreement\n- Refund\n- Credit Memo\n- RFI\n- RFP\n- Order\n- PO\n- Invoice\n- Building Permit\n- Construction Permit\n- Regulatory\n- Operating Permit\n- Complaint letter\n- Marketing correspondence\n- Non-disclosure Agreement\n- Employment Contract\n- Permanent Resident Care\n- Social Security Card\n- Cost justification\n- Pricing\n- Maintenance plan\n- User Manual\n- Engineering Specification\n- Functional Design\n- Audit Request\n- Auditor Report\n- Letter of Credit\n- Performance Bond\n- Power of Attorney\n- Audit Request\n- Auditor Report\n- Letter of Credit\n- Performance Bond\n- Power of Attorney\n- Regulatory\n- Engineering Specification\n- User Manual\n- Functional Design\n- Pricing\n\nwhere:\n\nDevelopment agreement (DA)\nOne of the range of agreements between governments and petroleum-resource developers is the DA or one of its variants - the Development and Fiscal Agreement (DFA) or the Development and Production Sharing Agreement (DPSA).\n\nEnabling agreement\nProvides the general terms and conditions for the purchase, sale, or exchange of LNG, pipeline gas and electricity, but does not list specific contract details.\n\nEnvironmental-impact assessment (EIA)\nAn assessment of the impact of an industrial installation or activity on the surrounding environment, conducted before work on that activity has commenced. The original baseline study, a key part of this process, describes the original conditions.\n\nFinancial-guarantee contract\nA contract that requires the issuer to make specified payments to reimburse the holder for a loss it incurs because a specified debtor fails to make payment when due in accordance with the original or modified terms of a debt instrument.\n\nForward contract\nA commitment to buy (long) or sell (short) an underlying asset at a specified date at a price (known as the exercise or forward price) specified at the origination of the contract.\n\nFutures\nContracts to buy or sell a commodity, such as gas, for a given price on a given date. Gas futures can usually be traded on a major exchange, such as NYMEX or ICE. \n\nHeads of agreement (HOA)\nA preliminary agreement covering the outline terms for the sale and purchase of LNG or natural gas. See Sales and purchase agreement (SPA)\n\nLong-term gas contract\nA supply contract in the physical market covering natural gas deliveries.\n\nOperational balancing agreements (OBAs)\nAgreements between pipelines and parties at delivery or receipt points, whereby the parties agree to specified procedures for balancing discrepancies between the nominated levels of service and the actual quantities.\nOperational-flow orders (OFOs)\nOrders that are issued by a pipeline to protect the operational integrity of the line.\n\nProduction-sharing contract (PSC)\nContract between a government and a company, granting the company a contractual right to explore and produce hydrocarbons in a specified area in enabling the company to recover its costs and a certain profit.\n\nSales and purchase agreement (SPA)\nA definitive contract between a seller and buyer for the sale and purchase of a quantity of natural gas or LNG for delivery during a specified period at a specified price. See Annual delivery programme (ADP) and Heads of agreement (HOA).\n\nTransportation contract\nContract setting forth the terms and conditions applicable to natural gas or electricity transportation services.\nEnabling agreement: provides the general terms and conditions for the purchase, sale, or exchange of LNG, pipeline gas and electricity, but does not list specific contract details. \nHeads of agreement (HOA): a preliminary agreement covering the outline terms for the sale and purchase of LNG or natural gas. See Sales and purchase agreement (SPA). \nOperational balancing agreements (OBAs): agreements between pipelines and parties at delivery or receipt points, whereby the parties agree to specified procedures for balancing discrepancies between the nominated levels of service and the actual quantities. \nSales and purchase agreement (SPA): a definitive contract between a seller and buyer for the sale and purchase of a quantity of natural gas or LNG for delivery during a specified",
								"DisplayFolderInfo": "{\"name\":\"Document Management\",\"colorCode\":\"#001475\"}",
								"PrimaryKeys": "DocumentTypeId",
								"spark.sql.sources.provider": "parquet"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Employee",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Description": "An individual who is hired to provide services to a company on a regular basis in exchange for compensation.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "EmployeeId",
										"Description": "The unique identifier of an Employee.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "EmployeeId"
										}
									},
									{
										"Name": "EmployeeName",
										"Description": "The name of the Employee.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "EmployeeName"
										}
									},
									{
										"Name": "DateOfBirth",
										"Description": "The date of birth of the employee.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "DateOfBirth"
										}
									},
									{
										"Name": "DateOfDeath",
										"Description": "The date of death of the employee.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "DateOfDeath"
										}
									},
									{
										"Name": "EmployeeStandardCostAmount",
										"Description": "The standard cost for the employee.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "EmployeeStandardCostAmount"
										}
									},
									{
										"Name": "EmployeeOvertimeCostAmount",
										"Description": "The overtime cost for the employee.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "EmployeeOvertimeCostAmount"
										}
									},
									{
										"Name": "EmployeeHireDate",
										"Description": "The date upon which the Employee was hired.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "EmployeeHireDate"
										}
									},
									{
										"Name": "HighlyCompensatedEmployeeIndicator",
										"Description": "Highly compensated employees are employees that receive compensation over a certain amount for a specific year.  The amount that qualifies an employee as a 'highly compensated' employee varies from year to year.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "HighlyCompensatedEmployeeIndicator"
										}
									},
									{
										"Name": "KeyEmployeeIndicator",
										"Description": "An employee who, at any time during the plan year is (1) an officer having annual compensation greater than $130,000 (subject to cost-of-living adjusting), (2) a more-than-5-percent owner of the employer, or (3) a more-than-1-percent owner whose annual compensation exceeds $150,000.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "KeyEmployeeIndicator"
										}
									},
									{
										"Name": "ExemptEmployeeIndicator",
										"Description": "An exempt employee is an employee who, because of his or her positional duties and responsibilities and level of decision making authority is exempt from the overtime provisions of the Fair Labor Standards Act (FLSA). Exempt employees are expected, by most organizations, to work whatever hours are necessary to accomplish the goals and deliverables of the position. Thus, exempt employees have more flexibility in their schedules to come and go as necessary to accomplish work than non-exempt or hourly employees.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "ExemptEmployeeIndicator"
										}
									},
									{
										"Name": "NonexemptEmployeeIndicator",
										"Description": "When an employee is classified as nonexempt, it means that the employee is entitled to a minimum wage, and overtime pay at the rate of time and one-half the regular rate for all hours worked in excess of 40 hours per week, as well as other protections under child labor and equal pay as prescribed by the FLSA.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "NonexemptEmployeeIndicator"
										}
									},
									{
										"Name": "AlienStatusId",
										"Description": "The unique identifier of an Alien Status.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "AlienStatusId"
										}
									},
									{
										"Name": "SexId",
										"Description": "The unique identifier of a Sex.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "SexId"
										}
									},
									{
										"Name": "GenderId",
										"Description": "The unique identifier of a Gender.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "GenderId"
										}
									},
									{
										"Name": "RacialCategoryId",
										"Description": "The unique identifier of a Racial Category.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "RacialCategoryId"
										}
									},
									{
										"Name": "EthnicCategoryId",
										"Description": "The unique identifier of an Ethnic Category.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "EthnicCategoryId"
										}
									},
									{
										"Name": "EmploymentLeadSourceId",
										"Description": "The unique identifier of an Employment Lead Source.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "EmploymentLeadSourceId"
										}
									},
									{
										"Name": "SecurityClearanceId",
										"Description": "The unique identifier of the Security Clearance.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "SecurityClearanceId"
										}
									},
									{
										"Name": "SecurityLevelId",
										"Description": "The unique identifier of the Security Level.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "SecurityLevelId"
										}
									},
									{
										"Name": "PartyId",
										"Description": "The unique identifier of a Party.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Employee.cdm.json/Employee",
											"Name": "PartyId"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/Employee",
										"FormatTypeSetToDatabaseDefault": true
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/Employee",
									"Properties": {
										"LinkedServiceName": "posynapsetest002-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"EmployeeId\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EmployeeId\"},\"EmployeeName\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EmployeeName\"},\"DateOfBirth\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"DateOfBirth\"},\"DateOfDeath\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"DateOfDeath\"},\"EmployeeStandardCostAmount\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EmployeeStandardCostAmount\"},\"EmployeeOvertimeCostAmount\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EmployeeOvertimeCostAmount\"},\"EmployeeHireDate\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EmployeeHireDate\"},\"HighlyCompensatedEmployeeIndicator\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"HighlyCompensatedEmployeeIndicator\"},\"KeyEmployeeIndicator\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"KeyEmployeeIndicator\"},\"ExemptEmployeeIndicator\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"ExemptEmployeeIndicator\"},\"NonexemptEmployeeIndicator\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"NonexemptEmployeeIndicator\"},\"AlienStatusId\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"AlienStatusId\"},\"SexId\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"SexId\"},\"GenderId\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"GenderId\"},\"RacialCategoryId\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"RacialCategoryId\"},\"EthnicCategoryId\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EthnicCategoryId\"},\"EmploymentLeadSourceId\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EmploymentLeadSourceId\"},\"SecurityClearanceId\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"SecurityClearanceId\"},\"SecurityLevelId\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"SecurityLevelId\"},\"PartyId\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"PartyId\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"Employee\",\"path\":\"Employee.cdm.json/Employee\"},\"description\":\"An individual who is hired to provide services to a company on a regular basis in exchange for compensation.\",\"primaryKey\":[\"EmployeeId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EmployeeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Employee.\",\"isNullable\":false,\"name\":\"EmployeeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EmployeeName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the Employee.\",\"isNullable\":true,\"name\":\"EmployeeName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"DateOfBirth\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date of birth of the employee.\",\"isNullable\":true,\"name\":\"DateOfBirth\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"DateOfDeath\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date of death of the employee.\",\"isNullable\":true,\"name\":\"DateOfDeath\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EmployeeStandardCostAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard cost for the employee.\",\"isNullable\":true,\"scale\":2,\"name\":\"EmployeeStandardCostAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EmployeeOvertimeCostAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The overtime cost for the employee.\",\"isNullable\":true,\"scale\":2,\"name\":\"EmployeeOvertimeCostAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EmployeeHireDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date upon which the Employee was hired.\",\"isNullable\":true,\"name\":\"EmployeeHireDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"HighlyCompensatedEmployeeIndicator\"},\"dataType\":\"boolean\",\"description\":\"Highly compensated employees are employees that receive compensation over a certain amount for a specific year.  The amount that qualifies an employee as a 'highly compensated' employee varies from year to year.\",\"isNullable\":true,\"name\":\"HighlyCompensatedEmployeeIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"KeyEmployeeIndicator\"},\"dataType\":\"boolean\",\"description\":\"An employee who, at any time during the plan year is (1) an officer having annual compensation greater than $130,000 (subject to cost-of-living adjusting), (2) a more-than-5-percent owner of the employer, or (3) a more-than-1-percent owner whose annual compensation exceeds $150,000.\",\"isNullable\":true,\"name\":\"KeyEmployeeIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"ExemptEmployeeIndicator\"},\"dataType\":\"boolean\",\"description\":\"An exempt employee is an employee who, because of his or her positional duties and responsibilities and level of decision making authority is exempt from the overtime provisions of the Fair Labor Standards Act (FLSA). Exempt employees are expected, by most organizations, to work whatever hours are necessary to accomplish the goals and deliverables of the position. Thus, exempt employees have more flexibility in their schedules to come and go as necessary to accomplish work than non-exempt or hourly employees.\",\"isNullable\":true,\"name\":\"ExemptEmployeeIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"NonexemptEmployeeIndicator\"},\"dataType\":\"boolean\",\"description\":\"When an employee is classified as nonexempt, it means that the employee is entitled to a minimum wage, and overtime pay at the rate of time and one-half the regular rate for all hours worked in excess of 40 hours per week, as well as other protections under child labor and equal pay as prescribed by the FLSA.\",\"isNullable\":true,\"name\":\"NonexemptEmployeeIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"AlienStatusId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Alien Status.\",\"isNullable\":true,\"name\":\"AlienStatusId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"SexId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Sex.\",\"isNullable\":true,\"name\":\"SexId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"GenderId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Gender.\",\"isNullable\":true,\"name\":\"GenderId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"RacialCategoryId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Racial Category.\",\"isNullable\":true,\"name\":\"RacialCategoryId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EthnicCategoryId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Ethnic Category.\",\"isNullable\":true,\"name\":\"EthnicCategoryId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"EmploymentLeadSourceId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Employment Lead Source.\",\"isNullable\":true,\"name\":\"EmploymentLeadSourceId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"SecurityClearanceId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the Security Clearance.\",\"isNullable\":true,\"name\":\"SecurityClearanceId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"SecurityLevelId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of the Security Level.\",\"isNullable\":true,\"name\":\"SecurityLevelId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Employee.cdm.json/Employee\",\"name\":\"PartyId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Party.\",\"isNullable\":true,\"name\":\"PartyId\"}]}}}",
								"Description": "An individual who is hired to provide services to a company on a regular basis in exchange for compensation.",
								"DisplayFolderInfo": "{\"name\":\"Human Resources & Payroll\",\"colorCode\":\"#EA279F\"}",
								"PrimaryKeys": "EmployeeId",
								"spark.sql.sources.provider": "parquet"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Project",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Description": "A project is a temporary activity with a starting date, specific goals and conditions, defined responsibilities, a budget, a planning, a fixed end date and multiple parties involved.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "ProjectId",
										"Description": "The unique identifier of a Project.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectId"
										}
									},
									{
										"Name": "ProjectName",
										"Description": "The name of a Project.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectName"
										}
									},
									{
										"Name": "ProjectDescription",
										"Description": "The description of a Project.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectDescription"
										}
									},
									{
										"Name": "ProjectTypeId",
										"Description": "The unique identifier of a Project Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectTypeId"
										}
									},
									{
										"Name": "ProjectPlannedStartTimestamp",
										"Description": "The planned start timestamp of a Project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectPlannedStartTimestamp"
										}
									},
									{
										"Name": "ProjectPlannedEndTimestamp",
										"Description": "The planned end timestamp of a Project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectPlannedEndTimestamp"
										}
									},
									{
										"Name": "ProjectEarliestStartTimestamp",
										"Description": "The earliest start timestamp of a Project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectEarliestStartTimestamp"
										}
									},
									{
										"Name": "ProjectEarliestEndTimestamp",
										"Description": "The earliest end timestamp of a Project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectEarliestEndTimestamp"
										}
									},
									{
										"Name": "ProjectLatestStartTimestamp",
										"Description": "The latest start timestamp of a Project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectLatestStartTimestamp"
										}
									},
									{
										"Name": "ProjectLatestEndTimestamp",
										"Description": "The latest end timestamp of a Project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectLatestEndTimestamp"
										}
									},
									{
										"Name": "ProjectClosingTimestamp",
										"Description": "The closing timestamp of the project.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectClosingTimestamp"
										}
									},
									{
										"Name": "ProjectRiskAssessmentStatement",
										"Description": "A statement in which planners identify potential risks and describe them, usually in terms of their symptoms, causes, probability of occurrence and potential impact.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectRiskAssessmentStatement"
										}
									},
									{
										"Name": "ProjectWorkStatement",
										"Description": "A description of the scope of a project centered on the major deliverables and constraints.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectWorkStatement"
										}
									},
									{
										"Name": "ProjectCharterStatement",
										"Description": "A document that describes the project at a high level of detail and is used to authorize the project management to begin work.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectCharterStatement"
										}
									},
									{
										"Name": "BusinessCaseStatement",
										"Description": "The information that describes the justification for the project. The project is justified if the expected benefits outweigh estimated costs and risks. The business case is often complex and may require financial analysis, technical analysis, organization impact analysis and a feasibility study.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "BusinessCaseStatement"
										}
									},
									{
										"Name": "LocationId",
										"Description": "The unique identifier of a Location.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "LocationId"
										}
									},
									{
										"Name": "ProjectGlAccountNumber",
										"Description": "The GL Account Number assigned to a Project.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 16,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectGlAccountNumber"
										}
									},
									{
										"Name": "ResponsibilityCenterId",
										"Description": "The unique identifier of a Responsibility Center.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ResponsibilityCenterId"
										}
									},
									{
										"Name": "ProjectNote",
										"Description": "A note, comment or additional information regarding the project.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Project.cdm.json/Project",
											"Name": "ProjectNote"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/Project",
										"FormatTypeSetToDatabaseDefault": true
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/Project",
									"Properties": {
										"LinkedServiceName": "posynapsetest002-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ProjectId\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectId\"},\"ProjectName\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectName\"},\"ProjectDescription\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectDescription\"},\"ProjectTypeId\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectTypeId\"},\"ProjectPlannedStartTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectPlannedStartTimestamp\"},\"ProjectPlannedEndTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectPlannedEndTimestamp\"},\"ProjectEarliestStartTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectEarliestStartTimestamp\"},\"ProjectEarliestEndTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectEarliestEndTimestamp\"},\"ProjectLatestStartTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectLatestStartTimestamp\"},\"ProjectLatestEndTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectLatestEndTimestamp\"},\"ProjectClosingTimestamp\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectClosingTimestamp\"},\"ProjectRiskAssessmentStatement\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectRiskAssessmentStatement\"},\"ProjectWorkStatement\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectWorkStatement\"},\"ProjectCharterStatement\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectCharterStatement\"},\"BusinessCaseStatement\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"BusinessCaseStatement\"},\"LocationId\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"LocationId\"},\"ProjectGlAccountNumber\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectGlAccountNumber\"},\"ResponsibilityCenterId\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ResponsibilityCenterId\"},\"ProjectNote\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectNote\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"Project\",\"path\":\"Project.cdm.json/Project\"},\"description\":\"A project is a temporary activity with a starting date, specific goals and conditions, defined responsibilities, a budget, a planning, a fixed end date and multiple parties involved.\",\"primaryKey\":[\"ProjectId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Project.\",\"isNullable\":false,\"name\":\"ProjectId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of a Project.\",\"isNullable\":true,\"name\":\"ProjectName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of a Project.\",\"isNullable\":true,\"name\":\"ProjectDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Project Type.\",\"isNullable\":true,\"name\":\"ProjectTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectPlannedStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The planned start timestamp of a Project.\",\"isNullable\":true,\"name\":\"ProjectPlannedStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectPlannedEndTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The planned end timestamp of a Project.\",\"isNullable\":true,\"name\":\"ProjectPlannedEndTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectEarliestStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The earliest start timestamp of a Project.\",\"isNullable\":true,\"name\":\"ProjectEarliestStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectEarliestEndTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The earliest end timestamp of a Project.\",\"isNullable\":true,\"name\":\"ProjectEarliestEndTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectLatestStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The latest start timestamp of a Project.\",\"isNullable\":true,\"name\":\"ProjectLatestStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectLatestEndTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The latest end timestamp of a Project.\",\"isNullable\":true,\"name\":\"ProjectLatestEndTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectClosingTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The closing timestamp of the project.\",\"isNullable\":true,\"name\":\"ProjectClosingTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectRiskAssessmentStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A statement in which planners identify potential risks and describe them, usually in terms of their symptoms, causes, probability of occurrence and potential impact.\",\"isNullable\":true,\"name\":\"ProjectRiskAssessmentStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectWorkStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A description of the scope of a project centered on the major deliverables and constraints.\",\"isNullable\":true,\"name\":\"ProjectWorkStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectCharterStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A document that describes the project at a high level of detail and is used to authorize the project management to begin work.\",\"isNullable\":true,\"name\":\"ProjectCharterStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"BusinessCaseStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"The information that describes the justification for the project. The project is justified if the expected benefits outweigh estimated costs and risks. The business case is often complex and may require financial analysis, technical analysis, organization impact analysis and a feasibility study.\",\"isNullable\":true,\"name\":\"BusinessCaseStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"LocationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Location.\",\"isNullable\":true,\"name\":\"LocationId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectGlAccountNumber\"},\"dataType\":\"string\",\"dataTypeLength\":16,\"description\":\"The GL Account Number assigned to a Project.\",\"isNullable\":true,\"name\":\"ProjectGlAccountNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ResponsibilityCenterId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Responsibility Center.\",\"isNullable\":true,\"name\":\"ResponsibilityCenterId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Project.cdm.json/Project\",\"name\":\"ProjectNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information regarding the project.\",\"isNullable\":true,\"name\":\"ProjectNote\"}]}}}",
								"Description": "A project is a temporary activity with a starting date, specific goals and conditions, defined responsibilities, a budget, a planning, a fixed end date and multiple parties involved.",
								"DisplayFolderInfo": "{\"name\":\"Project Management\",\"colorCode\":\"#BD4B37\"}",
								"PrimaryKeys": "ProjectId",
								"spark.sql.sources.provider": "parquet"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "ProjectActivity",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Description": "Any work performed in conjunction with a project. This is frequently analogous to a task but may be used to group or consolidate tasks.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "ProjectId",
										"Description": "The unique identifier of a Project.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ProjectId"
										}
									},
									{
										"Name": "ActivityId",
										"Description": "The unique identifier of an Activity.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityId"
										}
									},
									{
										"Name": "ActivityName",
										"Description": "The name of an Activity.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityName"
										}
									},
									{
										"Name": "ActivityDescription",
										"Description": "The description of an Activity.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityDescription"
										}
									},
									{
										"Name": "ActivityPlannedStartTimestamp",
										"Description": "The planned start timestamp of an activity.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityPlannedStartTimestamp"
										}
									},
									{
										"Name": "ActivityActualStartTimestamp",
										"Description": "The actual start timestamp of an activity.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityActualStartTimestamp"
										}
									},
									{
										"Name": "ActivityPlannedEndTimestamp",
										"Description": "The planned end timestamp of an activity.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityPlannedEndTimestamp"
										}
									},
									{
										"Name": "ActivityActualEndTimestamp",
										"Description": "The actual end timestamp of an activity.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivity.cdm.json/ProjectActivity",
											"Name": "ActivityActualEndTimestamp"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/ProjectActivity",
										"FormatTypeSetToDatabaseDefault": true
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/ProjectActivity",
									"Properties": {
										"LinkedServiceName": "posynapsetest002-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ProjectId\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ProjectId\"},\"ActivityId\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityId\"},\"ActivityName\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityName\"},\"ActivityDescription\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityDescription\"},\"ActivityPlannedStartTimestamp\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityPlannedStartTimestamp\"},\"ActivityActualStartTimestamp\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityActualStartTimestamp\"},\"ActivityPlannedEndTimestamp\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityPlannedEndTimestamp\"},\"ActivityActualEndTimestamp\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityActualEndTimestamp\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"ProjectActivity\",\"path\":\"ProjectActivity.cdm.json/ProjectActivity\"},\"description\":\"Any work performed in conjunction with a project. This is frequently analogous to a task but may be used to group or consolidate tasks.\",\"primaryKey\":[\"ProjectId\",\"ActivityId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ProjectId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Project.\",\"isNullable\":false,\"name\":\"ProjectId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Activity.\",\"isNullable\":false,\"name\":\"ActivityId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of an Activity.\",\"isNullable\":true,\"name\":\"ActivityName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of an Activity.\",\"isNullable\":true,\"name\":\"ActivityDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityPlannedStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The planned start timestamp of an activity.\",\"isNullable\":true,\"name\":\"ActivityPlannedStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityActualStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The actual start timestamp of an activity.\",\"isNullable\":true,\"name\":\"ActivityActualStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityPlannedEndTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The planned end timestamp of an activity.\",\"isNullable\":true,\"name\":\"ActivityPlannedEndTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"name\":\"ActivityActualEndTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The actual end timestamp of an activity.\",\"isNullable\":true,\"name\":\"ActivityActualEndTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"}]}}}",
								"Description": "Any work performed in conjunction with a project. This is frequently analogous to a task but may be used to group or consolidate tasks.",
								"DisplayFolderInfo": "{\"name\":\"Project Management\",\"colorCode\":\"#BD4B37\"}",
								"PrimaryKeys": "ProjectId,ActivityId",
								"spark.sql.sources.provider": "parquet"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "ProjectActivityTask",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Description": "The task(s) consolidated by or grouped by the Activity.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "ProjectId",
										"Description": "The unique identifier of a Project.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivityTask.cdm.json/ProjectActivityTask",
											"Name": "ProjectId"
										}
									},
									{
										"Name": "ActivityId",
										"Description": "The unique identifier of an Activity.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivityTask.cdm.json/ProjectActivityTask",
											"Name": "ActivityId"
										}
									},
									{
										"Name": "TaskId",
										"Description": "The unique identifier of a Task.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivityTask.cdm.json/ProjectActivityTask",
											"Name": "TaskId"
										}
									},
									{
										"Name": "ActivityTaskSequenceNumber",
										"Description": "The task execution sequence in the Activity.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivityTask.cdm.json/ProjectActivityTask",
											"Name": "ActivityTaskSequenceNumber"
										}
									},
									{
										"Name": "ActivityTaskNote",
										"Description": "A note, comment or additional information regarding the activity task.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectActivityTask.cdm.json/ProjectActivityTask",
											"Name": "ActivityTaskNote"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/ProjectActivityTask",
										"FormatTypeSetToDatabaseDefault": true
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/ProjectActivityTask",
									"Properties": {
										"LinkedServiceName": "posynapsetest002-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ProjectId\":{\"entity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"name\":\"ProjectId\"},\"ActivityId\":{\"entity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"name\":\"ActivityId\"},\"TaskId\":{\"entity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"name\":\"TaskId\"},\"ActivityTaskSequenceNumber\":{\"entity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"name\":\"ActivityTaskSequenceNumber\"},\"ActivityTaskNote\":{\"entity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"name\":\"ActivityTaskNote\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"ProjectActivityTask\",\"path\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\"},\"description\":\"The task(s) consolidated by or grouped by the Activity.\",\"primaryKey\":[\"ProjectId\",\"ActivityId\",\"TaskId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"name\":\"ProjectId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Project.\",\"isNullable\":false,\"name\":\"ProjectId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"name\":\"ActivityId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Activity.\",\"isNullable\":false,\"name\":\"ActivityId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"name\":\"TaskId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Task.\",\"isNullable\":false,\"name\":\"TaskId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"name\":\"ActivityTaskSequenceNumber\"},\"dataType\":\"integer\",\"description\":\"The task execution sequence in the Activity.\",\"isNullable\":true,\"name\":\"ActivityTaskSequenceNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"name\":\"ActivityTaskNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information regarding the activity task.\",\"isNullable\":true,\"name\":\"ActivityTaskNote\"}]}}}",
								"Description": "The task(s) consolidated by or grouped by the Activity.",
								"DisplayFolderInfo": "{\"name\":\"Project Management\",\"colorCode\":\"#BD4B37\"}",
								"PrimaryKeys": "ProjectId,ActivityId,TaskId",
								"spark.sql.sources.provider": "parquet"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "ProjectPhase",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Description": "A particular phase of an engagement, project or endeavor that is undertaken to create a unique product or service.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "ProjectId",
										"Description": "The unique identifier of a Project.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectPhase.cdm.json/ProjectPhase",
											"Name": "ProjectId"
										}
									},
									{
										"Name": "ProjectPhaseId",
										"Description": "The unique identifier of a Project Phase.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectPhase.cdm.json/ProjectPhase",
											"Name": "ProjectPhaseId"
										}
									},
									{
										"Name": "ProjectPhaseTypeId",
										"Description": "The unique identifier of a Proposal Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectPhase.cdm.json/ProjectPhase",
											"Name": "ProjectPhaseTypeId"
										}
									},
									{
										"Name": "ProjectPhaseName",
										"Description": "The name of the project phase.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectPhase.cdm.json/ProjectPhase",
											"Name": "ProjectPhaseName"
										}
									},
									{
										"Name": "ProjectPhaseDescription",
										"Description": "The description of the project phase.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectPhase.cdm.json/ProjectPhase",
											"Name": "ProjectPhaseDescription"
										}
									},
									{
										"Name": "ProjectPhasePlannedStartDate",
										"Description": "The planned start date of the project phase.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectPhase.cdm.json/ProjectPhase",
											"Name": "ProjectPhasePlannedStartDate"
										}
									},
									{
										"Name": "ProjectPhasePlannedFinishDate",
										"Description": "The planned finish date of the project phase.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectPhase.cdm.json/ProjectPhase",
											"Name": "ProjectPhasePlannedFinishDate"
										}
									},
									{
										"Name": "ProjectPhaseActualStartDate",
										"Description": "The actual start date of the project phase.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectPhase.cdm.json/ProjectPhase",
											"Name": "ProjectPhaseActualStartDate"
										}
									},
									{
										"Name": "ProjectPhaseActualFinishDate",
										"Description": "The actual finish date of the project phase.",
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectPhase.cdm.json/ProjectPhase",
											"Name": "ProjectPhaseActualFinishDate"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/ProjectPhase",
										"FormatTypeSetToDatabaseDefault": true
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/ProjectPhase",
									"Properties": {
										"LinkedServiceName": "posynapsetest002-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ProjectId\":{\"entity\":\"ProjectPhase.cdm.json/ProjectPhase\",\"name\":\"ProjectId\"},\"ProjectPhaseId\":{\"entity\":\"ProjectPhase.cdm.json/ProjectPhase\",\"name\":\"ProjectPhaseId\"},\"ProjectPhaseTypeId\":{\"entity\":\"ProjectPhase.cdm.json/ProjectPhase\",\"name\":\"ProjectPhaseTypeId\"},\"ProjectPhaseName\":{\"entity\":\"ProjectPhase.cdm.json/ProjectPhase\",\"name\":\"ProjectPhaseName\"},\"ProjectPhaseDescription\":{\"entity\":\"ProjectPhase.cdm.json/ProjectPhase\",\"name\":\"ProjectPhaseDescription\"},\"ProjectPhasePlannedStartDate\":{\"entity\":\"ProjectPhase.cdm.json/ProjectPhase\",\"name\":\"ProjectPhasePlannedStartDate\"},\"ProjectPhasePlannedFinishDate\":{\"entity\":\"ProjectPhase.cdm.json/ProjectPhase\",\"name\":\"ProjectPhasePlannedFinishDate\"},\"ProjectPhaseActualStartDate\":{\"entity\":\"ProjectPhase.cdm.json/ProjectPhase\",\"name\":\"ProjectPhaseActualStartDate\"},\"ProjectPhaseActualFinishDate\":{\"entity\":\"ProjectPhase.cdm.json/ProjectPhase\",\"name\":\"ProjectPhaseActualFinishDate\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"ProjectPhase\",\"path\":\"ProjectPhase.cdm.json/ProjectPhase\"},\"description\":\"A particular phase of an engagement, project or endeavor that is undertaken to create a unique product or service.\",\"primaryKey\":[\"ProjectId\",\"ProjectPhaseId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectPhase.cdm.json/ProjectPhase\",\"name\":\"ProjectId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Project.\",\"isNullable\":false,\"name\":\"ProjectId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectPhase.cdm.json/ProjectPhase\",\"name\":\"ProjectPhaseId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Project Phase.\",\"isNullable\":false,\"name\":\"ProjectPhaseId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectPhase.cdm.json/ProjectPhase\",\"name\":\"ProjectPhaseTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Proposal Type.\",\"isNullable\":false,\"name\":\"ProjectPhaseTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectPhase.cdm.json/ProjectPhase\",\"name\":\"ProjectPhaseName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of the project phase.\",\"isNullable\":true,\"name\":\"ProjectPhaseName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectPhase.cdm.json/ProjectPhase\",\"name\":\"ProjectPhaseDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of the project phase.\",\"isNullable\":true,\"name\":\"ProjectPhaseDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectPhase.cdm.json/ProjectPhase\",\"name\":\"ProjectPhasePlannedStartDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The planned start date of the project phase.\",\"isNullable\":true,\"name\":\"ProjectPhasePlannedStartDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectPhase.cdm.json/ProjectPhase\",\"name\":\"ProjectPhasePlannedFinishDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The planned finish date of the project phase.\",\"isNullable\":true,\"name\":\"ProjectPhasePlannedFinishDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectPhase.cdm.json/ProjectPhase\",\"name\":\"ProjectPhaseActualStartDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The actual start date of the project phase.\",\"isNullable\":true,\"name\":\"ProjectPhaseActualStartDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectPhase.cdm.json/ProjectPhase\",\"name\":\"ProjectPhaseActualFinishDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The actual finish date of the project phase.\",\"isNullable\":true,\"name\":\"ProjectPhaseActualFinishDate\"}]}}}",
								"Description": "A particular phase of an engagement, project or endeavor that is undertaken to create a unique product or service.",
								"DisplayFolderInfo": "{\"name\":\"Project Management\",\"colorCode\":\"#BD4B37\"}",
								"PrimaryKeys": "ProjectId,ProjectPhaseId",
								"spark.sql.sources.provider": "parquet"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "ProjectPhaseActivity",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Description": "The Activity(s) associated with the Project Phase.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "ProjectId",
										"Description": "The unique identifier of a Project.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectPhaseActivity.cdm.json/ProjectPhaseActivity",
											"Name": "ProjectId"
										}
									},
									{
										"Name": "ProjectPhaseId",
										"Description": "The unique identifier of a Project Phase.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectPhaseActivity.cdm.json/ProjectPhaseActivity",
											"Name": "ProjectPhaseId"
										}
									},
									{
										"Name": "ActivityId",
										"Description": "The unique identifier of an Activity.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectPhaseActivity.cdm.json/ProjectPhaseActivity",
											"Name": "ActivityId"
										}
									},
									{
										"Name": "ProjectPhaseActivityNote",
										"Description": "A note, comment or additional information regarding the project phase activity.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ProjectPhaseActivity.cdm.json/ProjectPhaseActivity",
											"Name": "ProjectPhaseActivityNote"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/ProjectPhaseActivity",
										"FormatTypeSetToDatabaseDefault": true
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/ProjectPhaseActivity",
									"Properties": {
										"LinkedServiceName": "posynapsetest002-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ProjectId\":{\"entity\":\"ProjectPhaseActivity.cdm.json/ProjectPhaseActivity\",\"name\":\"ProjectId\"},\"ProjectPhaseId\":{\"entity\":\"ProjectPhaseActivity.cdm.json/ProjectPhaseActivity\",\"name\":\"ProjectPhaseId\"},\"ActivityId\":{\"entity\":\"ProjectPhaseActivity.cdm.json/ProjectPhaseActivity\",\"name\":\"ActivityId\"},\"ProjectPhaseActivityNote\":{\"entity\":\"ProjectPhaseActivity.cdm.json/ProjectPhaseActivity\",\"name\":\"ProjectPhaseActivityNote\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"ProjectPhaseActivity\",\"path\":\"ProjectPhaseActivity.cdm.json/ProjectPhaseActivity\"},\"description\":\"The Activity(s) associated with the Project Phase.\",\"primaryKey\":[\"ProjectId\",\"ProjectPhaseId\",\"ActivityId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectPhaseActivity.cdm.json/ProjectPhaseActivity\",\"name\":\"ProjectId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Project.\",\"isNullable\":false,\"name\":\"ProjectId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectPhaseActivity.cdm.json/ProjectPhaseActivity\",\"name\":\"ProjectPhaseId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Project Phase.\",\"isNullable\":false,\"name\":\"ProjectPhaseId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectPhaseActivity.cdm.json/ProjectPhaseActivity\",\"name\":\"ActivityId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Activity.\",\"isNullable\":false,\"name\":\"ActivityId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ProjectPhaseActivity.cdm.json/ProjectPhaseActivity\",\"name\":\"ProjectPhaseActivityNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information regarding the project phase activity.\",\"isNullable\":true,\"name\":\"ProjectPhaseActivityNote\"}]}}}",
								"Description": "The Activity(s) associated with the Project Phase.",
								"DisplayFolderInfo": "{\"name\":\"Project Management\",\"colorCode\":\"#BD4B37\"}",
								"PrimaryKeys": "ProjectId,ProjectPhaseId,ActivityId",
								"spark.sql.sources.provider": "parquet"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Resource",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Description": "Any tangible support such as, a person, tool, supply item or facility used in the performance of a project. Human resources are people.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "ResourceId",
										"Description": "The unique identifier of a Resource.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Resource.cdm.json/Resource",
											"Name": "ResourceId"
										}
									},
									{
										"Name": "ResourceName",
										"Description": "The name of a Resource.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Resource.cdm.json/Resource",
											"Name": "ResourceName"
										}
									},
									{
										"Name": "ResourceDescription",
										"Description": "The description of a Resource.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Resource.cdm.json/Resource",
											"Name": "ResourceDescription"
										}
									},
									{
										"Name": "StandardRateAmount",
										"Description": "The standard rate of the resource.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Resource.cdm.json/Resource",
											"Name": "StandardRateAmount"
										}
									},
									{
										"Name": "OvertimeRateAmount",
										"Description": "The overtime rate of the resource.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Resource.cdm.json/Resource",
											"Name": "OvertimeRateAmount"
										}
									},
									{
										"Name": "PlanningStandardRateAmount",
										"Description": "The standard rate amount for the resource for planning purposes.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Resource.cdm.json/Resource",
											"Name": "PlanningStandardRateAmount"
										}
									},
									{
										"Name": "PlanningOvertimeRateAmount",
										"Description": "The overtime rate amount for the resource for planning purposes.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Resource.cdm.json/Resource",
											"Name": "PlanningOvertimeRateAmount"
										}
									},
									{
										"Name": "ResourceTypeId",
										"Description": "The unique identifier of a Resource Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Resource.cdm.json/Resource",
											"Name": "ResourceTypeId"
										}
									},
									{
										"Name": "EmployeeId",
										"Description": "The unique identifier of an Employee.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Resource.cdm.json/Resource",
											"Name": "EmployeeId"
										}
									},
									{
										"Name": "PartyId",
										"Description": "The unique identifier of a Party.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Resource.cdm.json/Resource",
											"Name": "PartyId"
										}
									},
									{
										"Name": "ItemSku",
										"Description": "The Stock Keeping Unit identifier, which is typically used for inventory-related activities.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 20,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Resource.cdm.json/Resource",
											"Name": "ItemSku"
										}
									},
									{
										"Name": "AssetId",
										"Description": "The unique identifier of an Asset.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Resource.cdm.json/Resource",
											"Name": "AssetId"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/Resource",
										"FormatTypeSetToDatabaseDefault": true
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/Resource",
									"Properties": {
										"LinkedServiceName": "posynapsetest002-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ResourceId\":{\"entity\":\"Resource.cdm.json/Resource\",\"name\":\"ResourceId\"},\"ResourceName\":{\"entity\":\"Resource.cdm.json/Resource\",\"name\":\"ResourceName\"},\"ResourceDescription\":{\"entity\":\"Resource.cdm.json/Resource\",\"name\":\"ResourceDescription\"},\"StandardRateAmount\":{\"entity\":\"Resource.cdm.json/Resource\",\"name\":\"StandardRateAmount\"},\"OvertimeRateAmount\":{\"entity\":\"Resource.cdm.json/Resource\",\"name\":\"OvertimeRateAmount\"},\"PlanningStandardRateAmount\":{\"entity\":\"Resource.cdm.json/Resource\",\"name\":\"PlanningStandardRateAmount\"},\"PlanningOvertimeRateAmount\":{\"entity\":\"Resource.cdm.json/Resource\",\"name\":\"PlanningOvertimeRateAmount\"},\"ResourceTypeId\":{\"entity\":\"Resource.cdm.json/Resource\",\"name\":\"ResourceTypeId\"},\"EmployeeId\":{\"entity\":\"Resource.cdm.json/Resource\",\"name\":\"EmployeeId\"},\"PartyId\":{\"entity\":\"Resource.cdm.json/Resource\",\"name\":\"PartyId\"},\"ItemSku\":{\"entity\":\"Resource.cdm.json/Resource\",\"name\":\"ItemSku\"},\"AssetId\":{\"entity\":\"Resource.cdm.json/Resource\",\"name\":\"AssetId\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"Resource\",\"path\":\"Resource.cdm.json/Resource\"},\"description\":\"Any tangible support such as, a person, tool, supply item or facility used in the performance of a project. Human resources are people.\",\"primaryKey\":[\"ResourceId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Resource.cdm.json/Resource\",\"name\":\"ResourceId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Resource.\",\"isNullable\":false,\"name\":\"ResourceId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Resource.cdm.json/Resource\",\"name\":\"ResourceName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of a Resource.\",\"isNullable\":true,\"name\":\"ResourceName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Resource.cdm.json/Resource\",\"name\":\"ResourceDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of a Resource.\",\"isNullable\":true,\"name\":\"ResourceDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Resource.cdm.json/Resource\",\"name\":\"StandardRateAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard rate of the resource.\",\"isNullable\":true,\"scale\":2,\"name\":\"StandardRateAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Resource.cdm.json/Resource\",\"name\":\"OvertimeRateAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The overtime rate of the resource.\",\"isNullable\":true,\"scale\":2,\"name\":\"OvertimeRateAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Resource.cdm.json/Resource\",\"name\":\"PlanningStandardRateAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The standard rate amount for the resource for planning purposes.\",\"isNullable\":true,\"scale\":2,\"name\":\"PlanningStandardRateAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Resource.cdm.json/Resource\",\"name\":\"PlanningOvertimeRateAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The overtime rate amount for the resource for planning purposes.\",\"isNullable\":true,\"scale\":2,\"name\":\"PlanningOvertimeRateAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Resource.cdm.json/Resource\",\"name\":\"ResourceTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Resource Type.\",\"isNullable\":false,\"name\":\"ResourceTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Resource.cdm.json/Resource\",\"name\":\"EmployeeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of an Employee.\",\"isNullable\":true,\"name\":\"EmployeeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Resource.cdm.json/Resource\",\"name\":\"PartyId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Party.\",\"isNullable\":true,\"name\":\"PartyId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Resource.cdm.json/Resource\",\"name\":\"ItemSku\"},\"dataType\":\"string\",\"dataTypeLength\":20,\"description\":\"The Stock Keeping Unit identifier, which is typically used for inventory-related activities.\",\"isNullable\":true,\"name\":\"ItemSku\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Resource.cdm.json/Resource\",\"name\":\"AssetId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of an Asset.\",\"isNullable\":true,\"name\":\"AssetId\"}]}}}",
								"Description": "Any tangible support such as, a person, tool, supply item or facility used in the performance of a project. Human resources are people.",
								"DisplayFolderInfo": "{\"name\":\"Project Management\",\"colorCode\":\"#BD4B37\"}",
								"PrimaryKeys": "ResourceId",
								"spark.sql.sources.provider": "parquet"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "ResourceType",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Description": "A categorization of types of resources. \n\nEx:\n- Employee Skill\n- Employee\n- Component\n- Item\n- Raw Material",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "ResourceTypeId",
										"Description": "The unique identifier of a Resource Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ResourceType.cdm.json/ResourceType",
											"Name": "ResourceTypeId"
										}
									},
									{
										"Name": "ResourceTypeName",
										"Description": "The name of a Resource Type.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ResourceType.cdm.json/ResourceType",
											"Name": "ResourceTypeName"
										}
									},
									{
										"Name": "ResourceTypeDescription",
										"Description": "The description of a Resource Type.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "ResourceType.cdm.json/ResourceType",
											"Name": "ResourceTypeDescription"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/ResourceType",
										"FormatTypeSetToDatabaseDefault": true
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/ResourceType",
									"Properties": {
										"LinkedServiceName": "posynapsetest002-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ResourceTypeId\":{\"entity\":\"ResourceType.cdm.json/ResourceType\",\"name\":\"ResourceTypeId\"},\"ResourceTypeName\":{\"entity\":\"ResourceType.cdm.json/ResourceType\",\"name\":\"ResourceTypeName\"},\"ResourceTypeDescription\":{\"entity\":\"ResourceType.cdm.json/ResourceType\",\"name\":\"ResourceTypeDescription\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"ResourceType\",\"path\":\"ResourceType.cdm.json/ResourceType\"},\"description\":\"A categorization of types of resources. \\n\\nEx:\\n- Employee Skill\\n- Employee\\n- Component\\n- Item\\n- Raw Material\",\"primaryKey\":[\"ResourceTypeId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ResourceType.cdm.json/ResourceType\",\"name\":\"ResourceTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Resource Type.\",\"isNullable\":false,\"name\":\"ResourceTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ResourceType.cdm.json/ResourceType\",\"name\":\"ResourceTypeName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of a Resource Type.\",\"isNullable\":true,\"name\":\"ResourceTypeName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"ResourceType.cdm.json/ResourceType\",\"name\":\"ResourceTypeDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of a Resource Type.\",\"isNullable\":true,\"name\":\"ResourceTypeDescription\"}]}}}",
								"Description": "A categorization of types of resources. \n\nEx:\n- Employee Skill\n- Employee\n- Component\n- Item\n- Raw Material",
								"DisplayFolderInfo": "{\"name\":\"Project Management\",\"colorCode\":\"#BD4B37\"}",
								"PrimaryKeys": "ResourceTypeId",
								"spark.sql.sources.provider": "parquet"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Task",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Description": "A specific task or piece of work that is performed.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "TaskId",
										"Description": "The unique identifier of a Task.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "TaskId"
										}
									},
									{
										"Name": "TaskName",
										"Description": "The name of a Task.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 128,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "TaskName"
										}
									},
									{
										"Name": "TaskDescription",
										"Description": "The description of the task.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 512,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "TaskDescription"
										}
									},
									{
										"Name": "TaskSpecificationStatement",
										"Description": "Detailed statements of project deliverables that result from requirements definition and design. \n\nSpecifications usually describe deliverables in terms of appearance, constraints and quality attributes. \n\nSpecifications are the basis for acceptance criteria used in scope verification and quality control.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "TaskSpecificationStatement"
										}
									},
									{
										"Name": "SequenceNumber",
										"Description": "The sequence number of the Task.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "SequenceNumber"
										}
									},
									{
										"Name": "MilestoneIndicator",
										"Description": "Indicates whether the task is a milestone.",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "MilestoneIndicator"
										}
									},
									{
										"Name": "CriticalPathTaskIndicator",
										"Description": "Tasks in a project network that have the longest duration. This represents the series of activities that determines the earliest completion of the project",
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "CriticalPathTaskIndicator"
										}
									},
									{
										"Name": "TaskNote",
										"Description": "A note, comment or additional information regarding the related Task.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "TaskNote"
										}
									},
									{
										"Name": "TaskPlannedStartTimestamp",
										"Description": "The planned start timestamp of the task.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "TaskPlannedStartTimestamp"
										}
									},
									{
										"Name": "TaskScheduledStartTimestamp",
										"Description": "The scheduled start timestamp of the task.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "TaskScheduledStartTimestamp"
										}
									},
									{
										"Name": "TaskActualStartTimestamp",
										"Description": "The actual start date of the task.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "TaskActualStartTimestamp"
										}
									},
									{
										"Name": "TaskPlannedCompletionTimestamp",
										"Description": "The planned completion timestamp of the task.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "TaskPlannedCompletionTimestamp"
										}
									},
									{
										"Name": "TaskScheduledCompletionTimestamp",
										"Description": "The scheduled completion timestamp of the task.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "TaskScheduledCompletionTimestamp"
										}
									},
									{
										"Name": "TaskActualCompletionTimestamp",
										"Description": "The actual finish date of the task.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "TaskActualCompletionTimestamp"
										}
									},
									{
										"Name": "TaskEarliestStartTimestamp",
										"Description": "The earliest task start timestamp.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "TaskEarliestStartTimestamp"
										}
									},
									{
										"Name": "TaskLatestStartTimestamp",
										"Description": "The latest task start timestamp.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "TaskLatestStartTimestamp"
										}
									},
									{
										"Name": "TaskEarliestCompletionTimestamp",
										"Description": "The earliest task completion timestamp.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "TaskEarliestCompletionTimestamp"
										}
									},
									{
										"Name": "TaskLatestCompletionTimestamp",
										"Description": "The latest task completion timestamp.",
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "TaskLatestCompletionTimestamp"
										}
									},
									{
										"Name": "TaskFloatHours",
										"Description": "The amount of time available for a task to slip before it results in a delay of the project end date. It is the difference between the task's early and late start dates.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "TaskFloatHours"
										}
									},
									{
										"Name": "PlannedBillableLaborUnits",
										"Description": "The planned total number of billable labor units anticipated to be associated with the task.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "PlannedBillableLaborUnits"
										}
									},
									{
										"Name": "ActualBillableLaborUnits",
										"Description": "The actual total number of billable labor units resulting from the task.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "ActualBillableLaborUnits"
										}
									},
									{
										"Name": "PlannedBillableChargesAmount",
										"Description": "The planned total amount of billable charges anticipated to be associated with the task.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "PlannedBillableChargesAmount"
										}
									},
									{
										"Name": "ActualBillableChargesAmount",
										"Description": "The actual total amount of billable charges associated with the task.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "ActualBillableChargesAmount"
										}
									},
									{
										"Name": "PlannedCostsAmount",
										"Description": "The planned internal costs associated with the task.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "PlannedCostsAmount"
										}
									},
									{
										"Name": "ActualCostsAmount",
										"Description": "The actual internal costs associated with the task.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "ActualCostsAmount"
										}
									},
									{
										"Name": "TaskTypeId",
										"Description": "The unique identifier of a Task Type.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "TaskTypeId"
										}
									},
									{
										"Name": "LocationId",
										"Description": "The unique identifier of a Location.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "LocationId"
										}
									},
									{
										"Name": "ResponsibilityCenterId",
										"Description": "The unique identifier of a Responsibility Center.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "ResponsibilityCenterId"
										}
									},
									{
										"Name": "TaskGlAccountNumber",
										"Description": "The GL Account Number assigned to a Task.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 16,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "Task.cdm.json/Task",
											"Name": "TaskGlAccountNumber"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/Task",
										"FormatTypeSetToDatabaseDefault": true
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/Task",
									"Properties": {
										"LinkedServiceName": "posynapsetest002-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"TaskId\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskId\"},\"TaskName\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskName\"},\"TaskDescription\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskDescription\"},\"TaskSpecificationStatement\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskSpecificationStatement\"},\"SequenceNumber\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"SequenceNumber\"},\"MilestoneIndicator\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"MilestoneIndicator\"},\"CriticalPathTaskIndicator\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"CriticalPathTaskIndicator\"},\"TaskNote\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskNote\"},\"TaskPlannedStartTimestamp\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskPlannedStartTimestamp\"},\"TaskScheduledStartTimestamp\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskScheduledStartTimestamp\"},\"TaskActualStartTimestamp\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskActualStartTimestamp\"},\"TaskPlannedCompletionTimestamp\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskPlannedCompletionTimestamp\"},\"TaskScheduledCompletionTimestamp\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskScheduledCompletionTimestamp\"},\"TaskActualCompletionTimestamp\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskActualCompletionTimestamp\"},\"TaskEarliestStartTimestamp\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskEarliestStartTimestamp\"},\"TaskLatestStartTimestamp\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskLatestStartTimestamp\"},\"TaskEarliestCompletionTimestamp\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskEarliestCompletionTimestamp\"},\"TaskLatestCompletionTimestamp\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskLatestCompletionTimestamp\"},\"TaskFloatHours\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskFloatHours\"},\"PlannedBillableLaborUnits\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"PlannedBillableLaborUnits\"},\"ActualBillableLaborUnits\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"ActualBillableLaborUnits\"},\"PlannedBillableChargesAmount\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"PlannedBillableChargesAmount\"},\"ActualBillableChargesAmount\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"ActualBillableChargesAmount\"},\"PlannedCostsAmount\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"PlannedCostsAmount\"},\"ActualCostsAmount\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"ActualCostsAmount\"},\"TaskTypeId\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskTypeId\"},\"LocationId\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"LocationId\"},\"ResponsibilityCenterId\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"ResponsibilityCenterId\"},\"TaskGlAccountNumber\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskGlAccountNumber\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"Task\",\"path\":\"Task.cdm.json/Task\"},\"description\":\"A specific task or piece of work that is performed.\",\"primaryKey\":[\"TaskId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Task.\",\"isNullable\":false,\"name\":\"TaskId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskName\"},\"dataType\":\"string\",\"dataTypeLength\":128,\"description\":\"The name of a Task.\",\"isNullable\":true,\"name\":\"TaskName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of the task.\",\"isNullable\":true,\"name\":\"TaskDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskSpecificationStatement\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"Detailed statements of project deliverables that result from requirements definition and design. \\n\\nSpecifications usually describe deliverables in terms of appearance, constraints and quality attributes. \\n\\nSpecifications are the basis for acceptance criteria used in scope verification and quality control.\",\"isNullable\":true,\"name\":\"TaskSpecificationStatement\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"SequenceNumber\"},\"dataType\":\"integer\",\"description\":\"The sequence number of the Task.\",\"isNullable\":false,\"name\":\"SequenceNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"MilestoneIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates whether the task is a milestone.\",\"isNullable\":true,\"name\":\"MilestoneIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"CriticalPathTaskIndicator\"},\"dataType\":\"boolean\",\"description\":\"Tasks in a project network that have the longest duration. This represents the series of activities that determines the earliest completion of the project\",\"isNullable\":true,\"name\":\"CriticalPathTaskIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information regarding the related Task.\",\"isNullable\":true,\"name\":\"TaskNote\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskPlannedStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The planned start timestamp of the task.\",\"isNullable\":true,\"name\":\"TaskPlannedStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskScheduledStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The scheduled start timestamp of the task.\",\"isNullable\":true,\"name\":\"TaskScheduledStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskActualStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The actual start date of the task.\",\"isNullable\":true,\"name\":\"TaskActualStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskPlannedCompletionTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The planned completion timestamp of the task.\",\"isNullable\":true,\"name\":\"TaskPlannedCompletionTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskScheduledCompletionTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The scheduled completion timestamp of the task.\",\"isNullable\":true,\"name\":\"TaskScheduledCompletionTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskActualCompletionTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The actual finish date of the task.\",\"isNullable\":true,\"name\":\"TaskActualCompletionTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskEarliestStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The earliest task start timestamp.\",\"isNullable\":true,\"name\":\"TaskEarliestStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskLatestStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The latest task start timestamp.\",\"isNullable\":true,\"name\":\"TaskLatestStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskEarliestCompletionTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The earliest task completion timestamp.\",\"isNullable\":true,\"name\":\"TaskEarliestCompletionTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskLatestCompletionTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The latest task completion timestamp.\",\"isNullable\":true,\"name\":\"TaskLatestCompletionTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskFloatHours\"},\"dataType\":\"integer\",\"description\":\"The amount of time available for a task to slip before it results in a delay of the project end date. It is the difference between the task's early and late start dates.\",\"isNullable\":true,\"name\":\"TaskFloatHours\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"PlannedBillableLaborUnits\"},\"dataType\":\"integer\",\"description\":\"The planned total number of billable labor units anticipated to be associated with the task.\",\"isNullable\":true,\"name\":\"PlannedBillableLaborUnits\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"ActualBillableLaborUnits\"},\"dataType\":\"integer\",\"description\":\"The actual total number of billable labor units resulting from the task.\",\"isNullable\":true,\"name\":\"ActualBillableLaborUnits\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"PlannedBillableChargesAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The planned total amount of billable charges anticipated to be associated with the task.\",\"isNullable\":true,\"scale\":2,\"name\":\"PlannedBillableChargesAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"ActualBillableChargesAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The actual total amount of billable charges associated with the task.\",\"isNullable\":true,\"scale\":2,\"name\":\"ActualBillableChargesAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"PlannedCostsAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The planned internal costs associated with the task.\",\"isNullable\":true,\"scale\":2,\"name\":\"PlannedCostsAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"ActualCostsAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The actual internal costs associated with the task.\",\"isNullable\":true,\"scale\":2,\"name\":\"ActualCostsAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Task Type.\",\"isNullable\":true,\"name\":\"TaskTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"LocationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Location.\",\"isNullable\":true,\"name\":\"LocationId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"ResponsibilityCenterId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Responsibility Center.\",\"isNullable\":true,\"name\":\"ResponsibilityCenterId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Task.cdm.json/Task\",\"name\":\"TaskGlAccountNumber\"},\"dataType\":\"string\",\"dataTypeLength\":16,\"description\":\"The GL Account Number assigned to a Task.\",\"isNullable\":true,\"name\":\"TaskGlAccountNumber\"}]}}}",
								"Description": "A specific task or piece of work that is performed.",
								"DisplayFolderInfo": "{\"name\":\"Work Order Management\",\"colorCode\":\"#F775C5\"}",
								"PrimaryKeys": "TaskId",
								"spark.sql.sources.provider": "parquet"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "TaskDocument",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Description": "A task document.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "TaskId",
										"Description": "The unique identifier of a Task.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TaskDocument.cdm.json/TaskDocument",
											"Name": "TaskId"
										}
									},
									{
										"Name": "DocumentId",
										"Description": "The unique identifier of a Document.",
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TaskDocument.cdm.json/TaskDocument",
											"Name": "DocumentId"
										}
									},
									{
										"Name": "TaskDocumentNote",
										"Description": "A note, comment or additional information regarding the task related document.",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 1024,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TaskDocument.cdm.json/TaskDocument",
											"Name": "TaskDocumentNote"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/TaskDocument",
										"FormatTypeSetToDatabaseDefault": true
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/TaskDocument",
									"Properties": {
										"LinkedServiceName": "posynapsetest002-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"TaskId\":{\"entity\":\"TaskDocument.cdm.json/TaskDocument\",\"name\":\"TaskId\"},\"DocumentId\":{\"entity\":\"TaskDocument.cdm.json/TaskDocument\",\"name\":\"DocumentId\"},\"TaskDocumentNote\":{\"entity\":\"TaskDocument.cdm.json/TaskDocument\",\"name\":\"TaskDocumentNote\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"TaskDocument\",\"path\":\"TaskDocument.cdm.json/TaskDocument\"},\"description\":\"A task document.\",\"primaryKey\":[\"TaskId\",\"DocumentId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TaskDocument.cdm.json/TaskDocument\",\"name\":\"TaskId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Task.\",\"isNullable\":false,\"name\":\"TaskId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TaskDocument.cdm.json/TaskDocument\",\"name\":\"DocumentId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Document.\",\"isNullable\":false,\"name\":\"DocumentId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TaskDocument.cdm.json/TaskDocument\",\"name\":\"TaskDocumentNote\"},\"dataType\":\"string\",\"dataTypeLength\":1024,\"description\":\"A note, comment or additional information regarding the task related document.\",\"isNullable\":true,\"name\":\"TaskDocumentNote\"}]}}}",
								"Description": "A task document.",
								"DisplayFolderInfo": "{\"name\":\"Work Order Management\",\"colorCode\":\"#F775C5\"}",
								"PrimaryKeys": "TaskId,DocumentId",
								"spark.sql.sources.provider": "parquet"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "TaskResource",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Description": "The resource(s) required by, consumed by or associated with the task.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "TaskId",
										"Description": "The unique identifier of a Task.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TaskResource.cdm.json/TaskResource",
											"Name": "TaskId"
										}
									},
									{
										"Name": "ResourceId",
										"Description": "The unique identifier of a Resource.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TaskResource.cdm.json/TaskResource",
											"Name": "ResourceId"
										}
									},
									{
										"Name": "ResourceNumber",
										"Description": "The number of associated resource associated with the task.",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TaskResource.cdm.json/TaskResource",
											"Name": "ResourceNumber"
										}
									},
									{
										"Name": "ResourceAmount",
										"Description": "The amount of associated resource associated with the task.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TaskResource.cdm.json/TaskResource",
											"Name": "ResourceAmount"
										}
									},
									{
										"Name": "ResourceQuantity",
										"Description": "The quantity of associated resource associated with the task.",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"BaseAttributeReference": {
											"Entity": "TaskResource.cdm.json/TaskResource",
											"Name": "ResourceQuantity"
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/TaskResource",
										"FormatTypeSetToDatabaseDefault": true
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://posynapsetest002fs@posynapsetest002str.dfs.core.windows.net/POC_Database/TaskResource",
									"Properties": {
										"LinkedServiceName": "posynapsetest002-WorkspaceDefaultStorage",
										"LocationSetToDatabaseDefault": true
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"TaskId\":{\"entity\":\"TaskResource.cdm.json/TaskResource\",\"name\":\"TaskId\"},\"ResourceId\":{\"entity\":\"TaskResource.cdm.json/TaskResource\",\"name\":\"ResourceId\"},\"ResourceNumber\":{\"entity\":\"TaskResource.cdm.json/TaskResource\",\"name\":\"ResourceNumber\"},\"ResourceAmount\":{\"entity\":\"TaskResource.cdm.json/TaskResource\",\"name\":\"ResourceAmount\"},\"ResourceQuantity\":{\"entity\":\"TaskResource.cdm.json/TaskResource\",\"name\":\"ResourceQuantity\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"TaskResource\",\"path\":\"TaskResource.cdm.json/TaskResource\"},\"description\":\"The resource(s) required by, consumed by or associated with the task.\",\"primaryKey\":[\"TaskId\",\"ResourceId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TaskResource.cdm.json/TaskResource\",\"name\":\"TaskId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Task.\",\"isNullable\":false,\"name\":\"TaskId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TaskResource.cdm.json/TaskResource\",\"name\":\"ResourceId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Resource.\",\"isNullable\":false,\"name\":\"ResourceId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TaskResource.cdm.json/TaskResource\",\"name\":\"ResourceNumber\"},\"dataType\":\"integer\",\"description\":\"The number of associated resource associated with the task.\",\"isNullable\":true,\"name\":\"ResourceNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TaskResource.cdm.json/TaskResource\",\"name\":\"ResourceAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The amount of associated resource associated with the task.\",\"isNullable\":true,\"scale\":2,\"name\":\"ResourceAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"TaskResource.cdm.json/TaskResource\",\"name\":\"ResourceQuantity\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The quantity of associated resource associated with the task.\",\"isNullable\":true,\"scale\":2,\"name\":\"ResourceQuantity\"}]}}}",
								"Description": "The resource(s) required by, consumed by or associated with the task.",
								"DisplayFolderInfo": "{\"name\":\"Project Management\",\"colorCode\":\"#BD4B37\"}",
								"PrimaryKeys": "TaskId,ResourceId",
								"spark.sql.sources.provider": "parquet"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-asywxmvrxh",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Employee",
							"ToTableName": "Resource",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "EmployeeId",
									"ToColumnName": "EmployeeId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Employee.cdm.json/Employee\",\"toEntity\":\"Resource.cdm.json/Resource\",\"joinPairs\":[{\"fromAttribute\":\"EmployeeId\",\"toAttribute\":\"EmployeeId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-bborudgqfs",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "ProjectActivity",
							"ToTableName": "ProjectPhaseActivity",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ActivityId",
									"ToColumnName": "ActivityId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"toEntity\":\"ProjectPhaseActivity.cdm.json/ProjectPhaseActivity\",\"joinPairs\":[{\"fromAttribute\":\"ActivityId\",\"toAttribute\":\"ActivityId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-dsyeuwwlzz",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "ProjectActivity",
							"ToTableName": "ProjectActivityTask",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ProjectId",
									"ToColumnName": "ProjectId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"toEntity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"joinPairs\":[{\"fromAttribute\":\"ProjectId\",\"toAttribute\":\"ProjectId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-ehryqqeevq",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Document",
							"ToTableName": "TaskDocument",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "DocumentId",
									"ToColumnName": "DocumentId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Document.cdm.json/Document\",\"toEntity\":\"TaskDocument.cdm.json/TaskDocument\",\"joinPairs\":[{\"fromAttribute\":\"DocumentId\",\"toAttribute\":\"DocumentId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-gvwrimptxl",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Task",
							"ToTableName": "ProjectActivityTask",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "TaskId",
									"ToColumnName": "TaskId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Task.cdm.json/Task\",\"toEntity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"joinPairs\":[{\"fromAttribute\":\"TaskId\",\"toAttribute\":\"TaskId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-hsyuyldclu",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Project",
							"ToTableName": "ProjectPhase",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ProjectId",
									"ToColumnName": "ProjectId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Project.cdm.json/Project\",\"toEntity\":\"ProjectPhase.cdm.json/ProjectPhase\",\"joinPairs\":[{\"fromAttribute\":\"ProjectId\",\"toAttribute\":\"ProjectId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-kkcytysrso",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "ProjectActivity",
							"ToTableName": "ProjectActivityTask",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ActivityId",
									"ToColumnName": "ActivityId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"toEntity\":\"ProjectActivityTask.cdm.json/ProjectActivityTask\",\"joinPairs\":[{\"fromAttribute\":\"ActivityId\",\"toAttribute\":\"ActivityId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-latrkwmrpb",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Project",
							"ToTableName": "ProjectActivity",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ProjectId",
									"ToColumnName": "ProjectId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Project.cdm.json/Project\",\"toEntity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"joinPairs\":[{\"fromAttribute\":\"ProjectId\",\"toAttribute\":\"ProjectId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-plractbfxr",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "DocumentType",
							"ToTableName": "Document",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "DocumentTypeId",
									"ToColumnName": "DocumentTypeId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"DocumentType.cdm.json/DocumentType\",\"toEntity\":\"Document.cdm.json/Document\",\"joinPairs\":[{\"fromAttribute\":\"DocumentTypeId\",\"toAttribute\":\"DocumentTypeId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-poecsqgbno",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Task",
							"ToTableName": "TaskResource",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "TaskId",
									"ToColumnName": "TaskId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Task.cdm.json/Task\",\"toEntity\":\"TaskResource.cdm.json/TaskResource\",\"joinPairs\":[{\"fromAttribute\":\"TaskId\",\"toAttribute\":\"TaskId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-qhblfixixp",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "ProjectPhase",
							"ToTableName": "ProjectPhaseActivity",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ProjectPhaseId",
									"ToColumnName": "ProjectPhaseId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"ProjectPhase.cdm.json/ProjectPhase\",\"toEntity\":\"ProjectPhaseActivity.cdm.json/ProjectPhaseActivity\",\"joinPairs\":[{\"fromAttribute\":\"ProjectPhaseId\",\"toAttribute\":\"ProjectPhaseId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-tankffeljq",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Resource",
							"ToTableName": "TaskResource",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ResourceId",
									"ToColumnName": "ResourceId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Resource.cdm.json/Resource\",\"toEntity\":\"TaskResource.cdm.json/TaskResource\",\"joinPairs\":[{\"fromAttribute\":\"ResourceId\",\"toAttribute\":\"ResourceId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-ticfsfxqcs",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "Task",
							"ToTableName": "TaskDocument",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "TaskId",
									"ToColumnName": "TaskId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"Task.cdm.json/Task\",\"toEntity\":\"TaskDocument.cdm.json/TaskDocument\",\"joinPairs\":[{\"fromAttribute\":\"TaskId\",\"toAttribute\":\"TaskId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-uxavbmfxzm",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "ProjectActivity",
							"ToTableName": "ProjectPhaseActivity",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ProjectId",
									"ToColumnName": "ProjectId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"ProjectActivity.cdm.json/ProjectActivity\",\"toEntity\":\"ProjectPhaseActivity.cdm.json/ProjectPhaseActivity\",\"joinPairs\":[{\"fromAttribute\":\"ProjectId\",\"toAttribute\":\"ProjectId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-xnuhwgbnkj",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "ProjectPhase",
							"ToTableName": "ProjectPhaseActivity",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ProjectId",
									"ToColumnName": "ProjectId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"ProjectPhase.cdm.json/ProjectPhase\",\"toEntity\":\"ProjectPhaseActivity.cdm.json/ProjectPhaseActivity\",\"joinPairs\":[{\"fromAttribute\":\"ProjectId\",\"toAttribute\":\"ProjectId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-zojwddzwvl",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "POC_Database"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "ResourceType",
							"ToTableName": "Resource",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "ResourceTypeId",
									"ToColumnName": "ResourceTypeId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"ResourceType.cdm.json/ResourceType\",\"toEntity\":\"Resource.cdm.json/Resource\",\"joinPairs\":[{\"fromAttribute\":\"ResourceTypeId\",\"toAttribute\":\"ResourceTypeId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					}
				]
			},
			"dependsOn": []
		}
	]
}